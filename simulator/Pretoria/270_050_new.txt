>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 13	 13	 1	 0.034228	 -1	 0.000000	 6.978053
1	 13	 13	 1	 0.090070	 -1	 0.000000	 3.902325
2	 13	 13	 1	 0.012699	 -1	 0.000000	 3.240994
3	 13	 13	 1	 0.022426	 -1	 0.000000	 5.090289
4	 13	 13	 1	 0.056810	 -1	 0.000000	 4.414350
5	 13	 13	 1	 0.005106	 -1	 0.000000	 5.078363
6	 13	 13	 1	 0.129416	 -1	 0.000000	 4.368075
7	 13	 13	 1	 0.080402	 -1	 0.000000	 4.404947
8	 13	 13	 1	 0.060451	 -1	 0.000000	 5.493119
9	 13	 13	 1	 0.028074	 -1	 0.000000	 9.434446
10	 13	 13	 1	 0.160684	 -1	 0.000000	 3.463806
11	 13	 13	 1	 0.040754	 -1	 0.000000	 3.275573
12	 13	 13	 1	 0.005004	 -1	 0.000000	 4.077860
13	 13	 13	 1	 0.558695	 -1	 0.000000	 6.887121
14	 13	 13	 1	 1.682889	 -1	 0.000000	 5.250033
15	 13	 13	 1	 0.012115	 -1	 0.000000	 5.287683
16	 13	 13	 1	 0.052564	 -1	 0.000000	 5.277291
17	 13	 13	 1	 0.018505	 -1	 0.000000	 13.144958
18	 13	 13	 1	 0.000963	 -1	 0.000000	 8.916297
19	 13	 13	 1	 0.000979	 -1	 0.000000	 6.683492
20	 13	 13	 1	 0.000226	 -1	 0.000000	 2.589283
21	 13	 13	 1	 0.023955	 -1	 0.000000	 5.577647
22	 13	 13	 1	 0.018621	 -1	 0.000000	 4.910038
23	 13	 13	 1	 0.000583	 -1	 0.000000	 3.202699
24	 13	 13	 1	 0.561372	 -1	 0.000000	 7.739103
25	 13	 13	 1	 0.023514	 -1	 0.000000	 2.825430
26	 13	 13	 1	 0.002106	 -1	 0.000000	 4.803890
27	 13	 13	 1	 0.032870	 -1	 0.000000	 3.214723
28	 13	 13	 1	 0.065225	 -1	 0.000000	 9.575390
29	 13	 13	 1	 0.062934	 -1	 0.000000	 2.854370
30	 13	 13	 1	 0.494041	 -1	 0.000000	 7.119341
31	 13	 13	 1	 0.602566	 -1	 0.000000	 5.957939
32	 13	 13	 1	 0.008117	 -1	 0.000000	 6.839520
33	 13	 13	 1	 0.065039	 -1	 0.000000	 3.860894
34	 13	 13	 1	 0.364896	 -1	 0.000000	 3.684794
35	 13	 13	 1	 0.096282	 -1	 0.000000	 3.384787
36	 13	 13	 1	 0.443528	 -1	 0.000000	 6.259701
37	 13	 13	 1	 0.123801	 -1	 0.000000	 3.765689
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 15	 15	 1	 3.619821	 -1	 0.000000	 3.905228
1	 15	 15	 1	 0.307342	 -1	 0.000000	 9.040096
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 5	 5	 1	 27.256039	 -1	 0.000000	 4.655453
1	 5	 5	 1	 25.985959	 -1	 0.000000	 3.889318
2	 5	 5	 1	 33.282036	 -1	 0.000000	 9.573286
3	 5	 5	 1	 36.800805	 -1	 0.000000	 3.482983
4	 5	 5	 1	 6.461930	 -1	 0.000000	 4.037901
5	 5	 5	 1	 13.927603	 -1	 0.000000	 6.742650
6	 5	 5	 1	 22.810399	 -1	 0.000000	 6.538182
7	 5	 5	 1	 22.962933	 -1	 0.000000	 5.017819
8	 5	 5	 1	 21.201464	 -1	 0.000000	 4.516789
9	 5	 5	 1	 41.409333	 -1	 0.000000	 6.058027
10	 5	 5	 0	 319.500722	 -1	 0.000000	 2.943696
11	 5	 5	 1	 22.461624	 -1	 0.000000	 3.203799
12	 5	 5	 1	 17.222996	 -1	 0.000000	 5.238611
13	 5	 5	 1	 32.238748	 -1	 0.000000	 2.463096
14	 5	 5	 1	 29.874626	 -1	 0.000000	 3.865768
15	 5	 5	 1	 21.022876	 -1	 0.000000	 3.759360
16	 5	 5	 1	 11.495794	 -1	 0.000000	 3.192685
17	 5	 5	 1	 30.585038	 -1	 0.000000	 2.777122
18	 5	 5	 1	 30.615508	 -1	 0.000000	 3.053663
19	 5	 5	 1	 25.375426	 -1	 0.000000	 3.340567
20	 5	 5	 1	 32.874639	 -1	 0.000000	 4.131488
21	 5	 5	 1	 22.587171	 -1	 0.000000	 4.087519
22	 5	 5	 1	 50.745984	 -1	 0.000000	 2.242203
23	 5	 5	 1	 16.153556	 -1	 0.000000	 7.405875
24	 5	 5	 1	 35.685590	 -1	 0.000000	 5.175592
25	 5	 5	 0	 145.475587	 -1	 0.000000	 2.326631
26	 5	 5	 1	 23.937679	 -1	 0.000000	 6.103436
27	 5	 5	 1	 26.781279	 -1	 0.000000	 4.993145
28	 5	 5	 1	 50.370444	 -1	 0.000000	 4.688739
29	 5	 5	 1	 29.385148	 -1	 0.000000	 4.486016
30	 5	 5	 1	 25.868090	 -1	 0.000000	 6.471510
31	 5	 5	 1	 25.755552	 -1	 0.000000	 6.380396
32	 5	 5	 1	 35.308326	 -1	 0.000000	 6.090045
33	 5	 5	 1	 36.289927	 -1	 0.000000	 6.236978
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 7	 7	 1	 101.334845	 -1	 0.000000	 4.657196
1	 7	 7	 1	 48.976308	 -1	 0.000000	 8.586838
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 7	 7	 1	 67.004670	 -1	 0.000000	 4.648142
1	 7	 7	 1	 126.830044	 -1	 0.000000	 3.562820
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 9	 9	 0	 392.242621	 -1	 0.000000	 5.135395
1	 9	 9	 0	 364.091053	 -1	 0.000000	 5.509225
2	 9	 9	 0	 366.660953	 -1	 0.000000	 10.260839
3	 9	 9	 0	 382.558752	 -1	 0.000000	 3.888767
4	 9	 9	 0	 451.798784	 -1	 0.000000	 4.520730
5	 9	 9	 0	 402.490627	 -1	 0.000000	 6.067069
6	 9	 9	 0	 357.441442	 -1	 0.000000	 2.476946
7	 9	 9	 0	 414.781031	 -1	 0.000000	 5.357590
8	 9	 9	 0	 431.911456	 -1	 0.000000	 4.361118
9	 9	 9	 0	 374.868786	 -1	 0.000000	 6.452078
10	 9	 9	 0	 357.978168	 -1	 0.000000	 5.275733
11	 9	 9	 0	 444.014983	 -1	 0.000000	 5.175469
12	 9	 9	 0	 361.924803	 -1	 0.000000	 11.443652
13	 9	 9	 0	 411.345712	 -1	 0.000000	 3.037993
14	 9	 9	 0	 375.485094	 -1	 0.000000	 5.296672
15	 9	 9	 0	 443.046323	 -1	 0.000000	 7.205428
16	 9	 9	 0	 412.896814	 -1	 0.000000	 5.699273
17	 9	 9	 0	 375.611607	 -1	 0.000000	 2.875597
18	 9	 9	 0	 435.288139	 -1	 0.000000	 5.936623
19	 9	 9	 0	 362.545589	 -1	 0.000000	 6.190243
20	 9	 9	 0	 381.760074	 -1	 0.000000	 4.049580
21	 9	 9	 0	 433.460077	 -1	 0.000000	 6.711966
22	 9	 9	 0	 403.487007	 -1	 0.000000	 8.093953
23	 9	 9	 0	 399.581239	 -1	 0.000000	 9.702068
24	 9	 9	 0	 427.926794	 -1	 0.000000	 4.733743
25	 9	 9	 0	 403.890081	 -1	 0.000000	 3.065853
26	 9	 9	 0	 441.584926	 -1	 0.000000	 4.431496
27	 9	 9	 0	 401.573500	 -1	 0.000000	 4.059858
28	 9	 9	 0	 318.161415	 -1	 0.000000	 8.396658
29	 9	 9	 0	 334.811788	 -1	 0.000000	 3.679069
30	 9	 9	 0	 414.984788	 -1	 0.000000	 2.592751
31	 9	 9	 0	 416.897162	 -1	 0.000000	 4.083262
32	 9	 9	 0	 269.365438	 -1	 0.000000	 4.764704
33	 9	 9	 0	 406.999763	 -1	 0.000000	 6.606383
34	 9	 9	 0	 425.558271	 -1	 0.000000	 3.280137
35	 9	 9	 0	 415.061709	 -1	 0.000000	 3.600916
36	 9	 9	 0	 365.389810	 -1	 0.000000	 6.288281
37	 9	 9	 0	 440.573694	 -1	 0.000000	 11.952825
38	 9	 9	 0	 399.455448	 -1	 0.000000	 8.649905
39	 9	 9	 0	 384.948938	 -1	 0.000000	 5.213016
40	 9	 9	 0	 381.741879	 -1	 0.000000	 6.303613
41	 9	 9	 0	 323.711317	 -1	 0.000000	 12.411868
42	 9	 9	 0	 402.497850	 -1	 0.000000	 10.391598
43	 9	 9	 0	 428.390566	 -1	 0.000000	 3.313941
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 11	 11	 0	 441.989903	 -1	 0.000000	 5.545788
1	 11	 11	 0	 439.877369	 -1	 0.000000	 2.750830
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 10	 10	 0	 475.671170	 -1	 0.000000	 5.521396
1	 10	 10	 0	 473.492167	 -1	 0.000000	 8.167558
2	 10	 10	 0	 479.031164	 -1	 0.000000	 6.553237
3	 10	 10	 0	 478.304041	 -1	 0.000000	 4.437062
4	 10	 10	 0	 472.897913	 -1	 0.000000	 8.303832
5	 10	 10	 0	 471.427810	 -1	 0.000000	 4.697975
6	 10	 10	 0	 481.573106	 -1	 0.000000	 4.380753
7	 10	 10	 0	 474.504665	 -1	 0.000000	 4.667072
8	 10	 10	 0	 473.994788	 -1	 0.000000	 3.264058
9	 10	 10	 0	 474.413224	 -1	 0.000000	 8.717505
10	 10	 10	 0	 472.275954	 -1	 0.000000	 3.079826
11	 10	 10	 0	 475.415391	 -1	 0.000000	 4.389424
12	 10	 10	 0	 467.632210	 -1	 0.000000	 8.466681
13	 10	 10	 0	 477.061304	 -1	 0.000000	 6.531882
14	 10	 10	 0	 479.017446	 -1	 0.000000	 4.481796
15	 10	 10	 0	 477.928199	 -1	 0.000000	 11.052154
16	 10	 10	 0	 473.174760	 -1	 0.000000	 7.163496
17	 10	 10	 0	 478.530865	 -1	 0.000000	 2.330831
18	 10	 10	 0	 472.515276	 -1	 0.000000	 4.336360
19	 10	 10	 0	 472.320497	 -1	 0.000000	 6.170106
20	 10	 10	 0	 474.826299	 -1	 0.000000	 9.754382
21	 10	 10	 0	 477.523677	 -1	 0.000000	 4.569455
22	 10	 10	 0	 476.075708	 -1	 0.000000	 3.575921
23	 10	 10	 0	 473.887862	 -1	 0.000000	 6.933368
24	 10	 10	 0	 479.638124	 -1	 0.000000	 4.402457
25	 10	 10	 0	 483.187177	 -1	 0.000000	 4.136652
26	 10	 10	 0	 473.325100	 -1	 0.000000	 6.410292
27	 10	 10	 0	 481.782743	 -1	 0.000000	 5.379532
28	 10	 10	 0	 468.742928	 -1	 0.000000	 5.653107
29	 10	 10	 0	 477.512467	 -1	 0.000000	 5.568048
30	 10	 10	 0	 469.655895	 -1	 0.000000	 6.944166
31	 10	 10	 0	 477.544705	 -1	 0.000000	 2.893849
32	 10	 10	 0	 476.090827	 -1	 0.000000	 9.987192
33	 10	 10	 0	 474.967102	 -1	 0.000000	 11.736237
34	 10	 10	 0	 472.156580	 -1	 0.000000	 4.845253
35	 10	 10	 0	 479.819566	 -1	 0.000000	 7.085820
36	 10	 10	 0	 478.649076	 -1	 0.000000	 6.546269
37	 10	 10	 0	 468.636735	 -1	 0.000000	 4.999539
38	 10	 10	 0	 475.370963	 -1	 0.000000	 5.168257
39	 10	 10	 0	 477.953853	 -1	 0.000000	 6.577579
40	 10	 10	 0	 471.681968	 -1	 0.000000	 10.225374
41	 10	 10	 0	 472.179909	 -1	 0.000000	 9.725974
42	 10	 10	 0	 477.186979	 -1	 0.000000	 2.404118
43	 10	 10	 0	 474.875158	 -1	 0.000000	 5.756383
44	 10	 10	 0	 479.011332	 -1	 0.000000	 7.461762
45	 10	 10	 0	 475.728738	 -1	 0.000000	 13.350358
46	 10	 10	 0	 475.674951	 -1	 0.000000	 2.674603
47	 10	 10	 0	 473.592678	 -1	 0.000000	 3.535837
48	 10	 10	 0	 472.814139	 -1	 0.000000	 7.255850
49	 10	 10	 0	 469.925931	 -1	 0.000000	 3.345608
50	 10	 10	 0	 476.375197	 -1	 0.000000	 7.113931
51	 10	 10	 0	 467.239364	 -1	 0.000000	 6.815451
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 10	 10	 0	 468.888566	 -1	 0.000000	 3.257602
1	 10	 10	 0	 471.847367	 -1	 0.000000	 3.311035
2	 10	 10	 0	 474.870864	 -1	 0.000000	 2.738457
3	 10	 10	 0	 479.198743	 -1	 0.000000	 6.404300
4	 10	 10	 0	 461.702821	 -1	 0.000000	 5.391563
5	 10	 10	 0	 472.550950	 -1	 0.000000	 4.200492
6	 10	 10	 0	 474.968109	 -1	 0.000000	 4.171653
7	 10	 10	 0	 472.755153	 -1	 0.000000	 7.994597
8	 10	 10	 0	 472.307427	 -1	 0.000000	 4.185173
9	 10	 10	 0	 475.633741	 -1	 0.000000	 3.474912
10	 10	 10	 0	 478.826806	 -1	 0.000000	 9.793493
11	 10	 10	 0	 467.472174	 -1	 0.000000	 9.042091
12	 10	 10	 0	 464.606310	 -1	 0.000000	 3.077475
13	 10	 10	 0	 481.853154	 -1	 0.000000	 6.963297
14	 10	 10	 0	 469.780870	 -1	 0.000000	 3.893412
15	 10	 10	 0	 476.415382	 -1	 0.000000	 5.958764
16	 10	 10	 0	 476.715067	 -1	 0.000000	 7.235712
17	 10	 10	 0	 476.990918	 -1	 0.000000	 3.280128
18	 10	 10	 0	 466.541027	 -1	 0.000000	 11.587619
19	 10	 10	 0	 476.906087	 -1	 0.000000	 5.075285
20	 10	 10	 0	 473.104720	 -1	 0.000000	 4.855034
21	 10	 10	 0	 467.837456	 -1	 0.000000	 4.838872
22	 10	 10	 0	 471.947640	 -1	 0.000000	 3.061394
23	 10	 10	 0	 472.860542	 -1	 0.000000	 4.903370
24	 10	 10	 0	 473.011453	 -1	 0.000000	 6.868150
25	 10	 10	 0	 476.679549	 -1	 0.000000	 5.230795
26	 10	 10	 0	 472.785487	 -1	 0.000000	 3.819528
27	 10	 10	 0	 477.020068	 -1	 0.000000	 8.594629
28	 10	 10	 0	 476.126784	 -1	 0.000000	 4.345475
29	 10	 10	 0	 482.741361	 -1	 0.000000	 5.718578
30	 10	 10	 0	 472.625438	 -1	 0.000000	 8.416008
31	 10	 10	 0	 475.135267	 -1	 0.000000	 9.702501
32	 10	 10	 0	 474.375690	 -1	 0.000000	 5.235425
33	 10	 10	 0	 475.856506	 -1	 0.000000	 3.850764
34	 10	 10	 0	 470.464616	 -1	 0.000000	 4.589372
35	 10	 10	 0	 477.125187	 -1	 0.000000	 5.981664
36	 10	 10	 0	 473.502076	 -1	 0.000000	 3.619894
37	 10	 10	 0	 477.132549	 -1	 0.000000	 4.638667
38	 10	 10	 0	 466.619861	 -1	 0.000000	 5.051455
39	 10	 10	 0	 477.708326	 -1	 0.000000	 5.462893
40	 10	 10	 0	 475.630848	 -1	 0.000000	 12.228457
41	 10	 10	 0	 475.305443	 -1	 0.000000	 6.832783
42	 10	 10	 0	 474.544234	 -1	 0.000000	 8.193275
43	 10	 10	 0	 473.118328	 -1	 0.000000	 7.144399
44	 10	 10	 0	 481.247319	 -1	 0.000000	 7.710013
45	 10	 10	 0	 482.311534	 -1	 0.000000	 3.003834
46	 10	 10	 0	 470.438798	 -1	 0.000000	 16.697998
47	 10	 10	 0	 471.629735	 -1	 0.000000	 5.453724
48	 10	 10	 0	 475.743374	 -1	 0.000000	 7.397846
49	 10	 10	 0	 474.761210	 -1	 0.000000	 3.140181
50	 10	 10	 0	 479.392917	 -1	 0.000000	 5.235699
51	 10	 10	 0	 468.586137	 -1	 0.000000	 3.417760
52	 10	 10	 0	 475.133480	 -1	 0.000000	 5.303588
53	 10	 10	 0	 473.907708	 -1	 0.000000	 5.506983
54	 10	 10	 0	 466.725379	 -1	 0.000000	 2.654680
55	 10	 10	 0	 477.883641	 -1	 0.000000	 5.408846
56	 10	 10	 0	 474.761022	 -1	 0.000000	 5.838676
57	 10	 10	 0	 476.231642	 -1	 0.000000	 5.481113
58	 10	 10	 0	 474.373353	 -1	 0.000000	 9.232224
59	 10	 10	 0	 472.426636	 -1	 0.000000	 5.789472
60	 10	 10	 0	 473.928830	 -1	 0.000000	 3.414482
61	 10	 10	 0	 475.098121	 -1	 0.000000	 4.334114
62	 10	 10	 0	 477.140753	 -1	 0.000000	 4.869980
63	 10	 10	 0	 464.124979	 -1	 0.000000	 7.119512
64	 10	 10	 0	 471.411344	 -1	 0.000000	 5.737423
65	 10	 10	 0	 475.403987	 -1	 0.000000	 4.741867
66	 10	 10	 0	 474.811344	 -1	 0.000000	 8.235474
67	 10	 10	 0	 472.894947	 -1	 0.000000	 7.566832
68	 10	 10	 0	 471.302712	 -1	 0.000000	 4.600550
69	 10	 10	 0	 464.106352	 -1	 0.000000	 7.989638
70	 10	 10	 0	 478.437987	 -1	 0.000000	 2.613715
71	 10	 10	 0	 475.002045	 -1	 0.000000	 11.868128
72	 10	 10	 0	 479.558912	 -1	 0.000000	 7.082150
73	 10	 10	 0	 468.155215	 -1	 0.000000	 2.469219
74	 10	 10	 0	 470.536951	 -1	 0.000000	 6.071745
75	 10	 10	 0	 468.080198	 -1	 0.000000	 5.495155
76	 10	 10	 0	 473.394201	 -1	 0.000000	 5.091567
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
