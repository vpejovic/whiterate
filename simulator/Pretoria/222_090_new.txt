>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 13	 13	 1	 0.002272	 -1	 0.000000	 5.619750
1	 13	 13	 1	 0.004911	 -1	 0.000000	 8.439665
2	 13	 13	 1	 0.000615	 -1	 0.000000	 6.985734
3	 13	 13	 1	 0.000421	 -1	 0.000000	 4.254035
4	 13	 13	 1	 0.000515	 -1	 0.000000	 4.921786
5	 13	 13	 1	 0.000229	 -1	 0.000000	 10.527990
6	 13	 13	 1	 0.000327	 -1	 0.000000	 5.498163
7	 13	 13	 1	 0.000251	 -1	 0.000000	 10.296982
8	 13	 13	 1	 0.003697	 -1	 0.000000	 7.139852
9	 13	 13	 1	 0.000283	 -1	 0.000000	 14.037115
10	 13	 13	 1	 0.017335	 -1	 0.000000	 8.959696
11	 13	 13	 1	 0.000346	 -1	 0.000000	 9.385150
12	 13	 13	 1	 0.000195	 -1	 0.000000	 9.498747
13	 13	 13	 1	 0.001213	 -1	 0.000000	 6.076622
14	 13	 13	 1	 0.000500	 -1	 0.000000	 10.070382
15	 13	 13	 1	 0.001146	 -1	 0.000000	 5.279374
16	 13	 13	 1	 0.000741	 -1	 0.000000	 6.400792
17	 13	 13	 1	 0.000253	 -1	 0.000000	 5.183554
18	 13	 13	 1	 0.000208	 -1	 0.000000	 9.688562
19	 13	 13	 1	 0.002543	 -1	 0.000000	 4.487587
20	 13	 13	 1	 0.001011	 -1	 0.000000	 3.926307
21	 13	 13	 1	 0.005567	 -1	 0.000000	 6.032770
22	 13	 13	 1	 0.001161	 -1	 0.000000	 5.880144
23	 13	 13	 1	 0.009178	 -1	 0.000000	 8.889766
24	 13	 13	 1	 0.000990	 -1	 0.000000	 8.202212
25	 13	 13	 1	 0.000646	 -1	 0.000000	 5.861230
26	 13	 13	 1	 0.000469	 -1	 0.000000	 7.703103
27	 13	 13	 1	 0.000476	 -1	 0.000000	 5.534065
28	 13	 13	 1	 0.000981	 -1	 0.000000	 9.103866
29	 13	 13	 1	 0.000693	 -1	 0.000000	 6.348287
30	 13	 13	 1	 0.043371	 -1	 0.000000	 10.588363
31	 13	 13	 1	 0.000430	 -1	 0.000000	 7.911278
32	 13	 13	 1	 0.003772	 -1	 0.000000	 6.301568
33	 13	 13	 1	 0.000402	 -1	 0.000000	 3.768119
34	 13	 13	 1	 0.001540	 -1	 0.000000	 4.251918
35	 13	 13	 1	 0.005241	 -1	 0.000000	 5.236565
36	 13	 13	 1	 0.000628	 -1	 0.000000	 5.896349
37	 13	 13	 1	 0.001503	 -1	 0.000000	 6.106969
38	 13	 13	 1	 0.001901	 -1	 0.000000	 6.704844
39	 13	 13	 1	 0.001402	 -1	 0.000000	 10.083350
40	 13	 13	 1	 0.001723	 -1	 0.000000	 6.145844
41	 13	 13	 1	 0.002128	 -1	 0.000000	 6.093793
42	 13	 13	 1	 0.000391	 -1	 0.000000	 5.824442
43	 13	 13	 1	 0.000625	 -1	 0.000000	 5.895011
44	 13	 13	 1	 0.000102	 -1	 0.000000	 4.954112
45	 13	 13	 1	 0.000408	 -1	 0.000000	 6.355846
46	 13	 13	 1	 0.003140	 -1	 0.000000	 7.758370
47	 13	 13	 1	 0.003398	 -1	 0.000000	 7.471684
48	 13	 13	 1	 0.001021	 -1	 0.000000	 5.930239
49	 13	 13	 1	 0.001037	 -1	 0.000000	 5.394469
50	 13	 13	 1	 0.000737	 -1	 0.000000	 11.814627
51	 13	 13	 1	 0.000224	 -1	 0.000000	 5.978711
52	 13	 13	 1	 0.000229	 -1	 0.000000	 3.512159
53	 13	 13	 1	 0.001588	 -1	 0.000000	 4.310664
54	 13	 13	 1	 0.000442	 -1	 0.000000	 4.487196
55	 13	 13	 1	 0.000747	 -1	 0.000000	 2.579642
56	 13	 13	 1	 0.000676	 -1	 0.000000	 4.369618
57	 13	 13	 1	 0.001641	 -1	 0.000000	 6.129341
58	 13	 13	 1	 0.001854	 -1	 0.000000	 4.375581
59	 13	 13	 1	 0.001383	 -1	 0.000000	 5.663991
60	 13	 13	 1	 0.000282	 -1	 0.000000	 8.559500
61	 13	 13	 1	 0.002391	 -1	 0.000000	 7.748887
62	 13	 13	 1	 0.000693	 -1	 0.000000	 11.942647
63	 13	 13	 1	 0.000509	 -1	 0.000000	 8.355505
64	 13	 13	 1	 0.003850	 -1	 0.000000	 11.200811
65	 13	 13	 1	 0.001171	 -1	 0.000000	 9.578964
66	 13	 13	 1	 0.002423	 -1	 0.000000	 4.879158
67	 13	 13	 1	 0.001668	 -1	 0.000000	 5.404794
68	 13	 13	 1	 0.001282	 -1	 0.000000	 13.183610
69	 13	 13	 1	 0.000643	 -1	 0.000000	 4.574670
70	 13	 13	 1	 0.001104	 -1	 0.000000	 4.410134
71	 13	 13	 1	 0.000337	 -1	 0.000000	 4.196212
72	 13	 13	 1	 0.000116	 -1	 0.000000	 9.434537
73	 13	 13	 1	 0.000863	 -1	 0.000000	 3.913809
74	 13	 13	 1	 0.000413	 -1	 0.000000	 6.968444
75	 13	 13	 1	 0.000715	 -1	 0.000000	 6.500230
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 15	 15	 1	 0.199444	 -1	 0.000000	 10.206269
1	 15	 15	 1	 0.509133	 -1	 0.000000	 4.489002
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
python: ./gr_buffer.h:123: unsigned int gr_buffer::index_add(unsigned int, unsigned int): Assertion `s < d_bufsize' failed.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 5	 5	 1	 6.018181	 -1	 0.000000	 4.334188
1	 5	 5	 1	 9.375703	 -1	 0.000000	 8.501884
2	 5	 5	 1	 5.707189	 -1	 0.000000	 6.638992
3	 5	 5	 1	 2.940170	 -1	 0.000000	 7.216330
4	 5	 5	 1	 1.686317	 -1	 0.000000	 7.431024
5	 5	 5	 1	 8.622590	 -1	 0.000000	 7.527482
6	 5	 5	 1	 2.215126	 -1	 0.000000	 9.097425
7	 5	 5	 1	 1.065140	 -1	 0.000000	 4.292171
8	 5	 5	 1	 6.498434	 -1	 0.000000	 9.451459
9	 5	 5	 1	 13.387794	 -1	 0.000000	 5.850611
10	 5	 5	 1	 3.104120	 -1	 0.000000	 9.361065
11	 5	 5	 1	 1.116108	 -1	 0.000000	 4.857194
12	 5	 5	 1	 0.663154	 -1	 0.000000	 6.716923
13	 5	 5	 1	 1.176402	 -1	 0.000000	 4.484980
14	 5	 5	 1	 3.773260	 -1	 0.000000	 3.923423
15	 5	 5	 1	 2.558471	 -1	 0.000000	 6.457122
16	 5	 5	 1	 2.311995	 -1	 0.000000	 6.935752
17	 5	 5	 1	 3.088744	 -1	 0.000000	 6.162240
18	 5	 5	 1	 2.507088	 -1	 0.000000	 5.639979
19	 5	 5	 1	 11.412720	 -1	 0.000000	 3.881711
20	 5	 5	 1	 0.884863	 -1	 0.000000	 4.176216
21	 5	 5	 1	 2.649900	 -1	 0.000000	 7.517168
22	 5	 5	 1	 5.802349	 -1	 0.000000	 9.115650
23	 5	 5	 1	 1.277264	 -1	 0.000000	 4.222305
24	 5	 5	 1	 3.423880	 -1	 0.000000	 12.439733
25	 5	 5	 1	 1.993721	 -1	 0.000000	 6.607749
26	 5	 5	 1	 7.565483	 -1	 0.000000	 4.165174
27	 5	 5	 1	 2.561925	 -1	 0.000000	 5.589995
28	 5	 5	 1	 2.017072	 -1	 0.000000	 8.081928
29	 5	 5	 1	 0.508252	 -1	 0.000000	 3.810938
30	 5	 5	 1	 4.059162	 -1	 0.000000	 6.595129
31	 5	 5	 1	 4.842156	 -1	 0.000000	 4.681363
32	 5	 5	 1	 3.752267	 -1	 0.000000	 6.781297
33	 5	 5	 1	 0.651616	 -1	 0.000000	 4.829319
34	 5	 5	 1	 4.026098	 -1	 0.000000	 6.778877
35	 5	 5	 1	 0.151350	 -1	 0.000000	 8.474768
36	 5	 5	 1	 0.688886	 -1	 0.000000	 6.646557
37	 5	 5	 1	 5.697571	 -1	 0.000000	 6.364448
38	 5	 5	 1	 2.713342	 -1	 0.000000	 15.228928
39	 5	 5	 1	 3.927784	 -1	 0.000000	 5.987233
40	 5	 5	 1	 1.003997	 -1	 0.000000	 7.971404
41	 5	 5	 1	 3.810556	 -1	 0.000000	 7.376785
42	 5	 5	 1	 2.261485	 -1	 0.000000	 4.397115
43	 5	 5	 1	 9.451548	 -1	 0.000000	 9.380610
44	 5	 5	 1	 4.905236	 -1	 0.000000	 7.449253
45	 5	 5	 1	 1.750090	 -1	 0.000000	 4.424194
46	 5	 5	 1	 5.763355	 -1	 0.000000	 9.779913
47	 5	 5	 1	 3.594613	 -1	 0.000000	 8.948493
48	 5	 5	 1	 2.173794	 -1	 0.000000	 8.139328
49	 5	 5	 1	 0.795995	 -1	 0.000000	 12.353693
50	 5	 5	 1	 1.825280	 -1	 0.000000	 9.572129
51	 5	 5	 1	 4.255808	 -1	 0.000000	 7.479265
52	 5	 5	 1	 1.686626	 -1	 0.000000	 7.919142
53	 5	 5	 1	 2.948188	 -1	 0.000000	 4.552763
54	 5	 5	 1	 1.068445	 -1	 0.000000	 5.977139
55	 5	 5	 1	 3.198170	 -1	 0.000000	 10.829041
56	 5	 5	 1	 3.327791	 -1	 0.000000	 7.261479
57	 5	 5	 1	 8.066913	 -1	 0.000000	 10.125938
58	 5	 5	 1	 6.676401	 -1	 0.000000	 8.271617
59	 5	 5	 1	 4.098158	 -1	 0.000000	 7.619257
60	 5	 5	 1	 5.880418	 -1	 0.000000	 3.871070
61	 5	 5	 1	 2.289540	 -1	 0.000000	 5.093051
62	 5	 5	 1	 3.672316	 -1	 0.000000	 6.408716
63	 5	 5	 1	 1.329981	 -1	 0.000000	 9.935707
64	 5	 5	 1	 4.821721	 -1	 0.000000	 6.312497
65	 5	 5	 1	 0.504551	 -1	 0.000000	 8.117914
66	 5	 5	 1	 1.383304	 -1	 0.000000	 4.548366
67	 5	 5	 1	 8.570959	 -1	 0.000000	 4.297037
68	 5	 5	 1	 2.229376	 -1	 0.000000	 5.235048
69	 5	 5	 1	 1.108776	 -1	 0.000000	 6.157701
70	 5	 5	 1	 3.274443	 -1	 0.000000	 13.463029
71	 5	 5	 1	 2.975131	 -1	 0.000000	 5.748747
72	 5	 5	 1	 4.345070	 -1	 0.000000	 6.364428
73	 5	 5	 1	 3.061046	 -1	 0.000000	 6.841285
74	 5	 5	 1	 1.000626	 -1	 0.000000	 6.150250
75	 5	 5	 1	 6.976456	 -1	 0.000000	 5.547679
76	 5	 5	 1	 2.017573	 -1	 0.000000	 6.303299
77	 5	 5	 1	 2.434991	 -1	 0.000000	 3.256407
78	 5	 5	 1	 3.845420	 -1	 0.000000	 6.072259
79	 5	 5	 1	 4.439888	 -1	 0.000000	 7.142329
80	 5	 5	 1	 7.148742	 -1	 0.000000	 5.032391
81	 5	 5	 1	 2.556724	 -1	 0.000000	 5.319112
82	 5	 5	 1	 1.030968	 -1	 0.000000	 6.339717
83	 5	 5	 1	 4.146291	 -1	 0.000000	 6.443676
84	 5	 5	 1	 7.310456	 -1	 0.000000	 5.865287
85	 5	 5	 1	 5.424376	 -1	 0.000000	 5.254918
86	 5	 5	 1	 5.061638	 -1	 0.000000	 6.996040
87	 5	 5	 1	 9.676235	 -1	 0.000000	 3.824225
88	 5	 5	 1	 0.812521	 -1	 0.000000	 3.721829
89	 5	 5	 1	 2.713463	 -1	 0.000000	 3.460369
90	 5	 5	 1	 1.469676	 -1	 0.000000	 6.962586
91	 5	 5	 1	 5.825447	 -1	 0.000000	 6.286685
92	 5	 5	 1	 3.739579	 -1	 0.000000	 3.360811
93	 5	 5	 1	 0.995793	 -1	 0.000000	 6.117972
94	 5	 5	 1	 0.899519	 -1	 0.000000	 6.245781
95	 5	 5	 1	 2.322133	 -1	 0.000000	 4.263902
96	 5	 5	 1	 2.279062	 -1	 0.000000	 4.900498
97	 5	 5	 1	 2.981399	 -1	 0.000000	 8.692993
98	 5	 5	 1	 7.123518	 -1	 0.000000	 13.568447
99	 5	 5	 1	 7.924825	 -1	 0.000000	 8.563938
100	 5	 5	 1	 4.202149	 -1	 0.000000	 6.940787
101	 5	 5	 1	 5.994716	 -1	 0.000000	 4.896729
102	 5	 5	 1	 0.895778	 -1	 0.000000	 6.397661
103	 5	 5	 1	 0.823705	 -1	 0.000000	 3.906470
104	 5	 5	 1	 8.903319	 -1	 0.000000	 4.670012
105	 5	 5	 1	 9.335323	 -1	 0.000000	 8.348650
106	 5	 5	 1	 1.335959	 -1	 0.000000	 3.942781
107	 5	 5	 1	 3.000833	 -1	 0.000000	 9.999706
108	 5	 5	 1	 5.430798	 -1	 0.000000	 9.471081
109	 5	 5	 1	 4.180446	 -1	 0.000000	 10.106881
110	 5	 5	 1	 2.737906	 -1	 0.000000	 9.398320
111	 5	 5	 1	 0.298813	 -1	 0.000000	 9.445813
112	 5	 5	 1	 4.240164	 -1	 0.000000	 7.220753
113	 5	 5	 1	 1.075117	 -1	 0.000000	 6.063228
114	 5	 5	 1	 1.400286	 -1	 0.000000	 11.008279
115	 5	 5	 1	 3.528711	 -1	 0.000000	 5.971034
116	 5	 5	 1	 1.056526	 -1	 0.000000	 6.188488
117	 5	 5	 1	 1.381430	 -1	 0.000000	 8.717690
118	 5	 5	 1	 3.609402	 -1	 0.000000	 4.810302
119	 5	 5	 1	 1.242900	 -1	 0.000000	 5.189816
120	 5	 5	 1	 1.185613	 -1	 0.000000	 8.064369
121	 5	 5	 1	 2.273093	 -1	 0.000000	 4.702302
122	 5	 5	 1	 4.428593	 -1	 0.000000	 4.757277
123	 5	 5	 1	 0.359566	 -1	 0.000000	 13.931304
124	 5	 5	 1	 4.444118	 -1	 0.000000	 7.459674
125	 5	 5	 1	 2.652937	 -1	 0.000000	 13.512976
126	 5	 5	 1	 14.149135	 -1	 0.000000	 4.926418
127	 5	 5	 1	 1.910125	 -1	 0.000000	 3.379070
128	 5	 5	 1	 1.622467	 -1	 0.000000	 5.496976
129	 5	 5	 1	 1.309373	 -1	 0.000000	 5.148669
130	 5	 5	 1	 4.793117	 -1	 0.000000	 3.922543
131	 5	 5	 1	 2.426510	 -1	 0.000000	 5.321473
132	 5	 5	 1	 0.878069	 -1	 0.000000	 5.854994
133	 5	 5	 1	 0.957164	 -1	 0.000000	 10.404702
134	 5	 5	 1	 8.787774	 -1	 0.000000	 4.626099
135	 5	 5	 1	 10.866596	 -1	 0.000000	 5.430125
136	 5	 5	 1	 0.722895	 -1	 0.000000	 9.444227
137	 5	 5	 1	 3.056514	 -1	 0.000000	 5.915379
138	 5	 5	 1	 6.691066	 -1	 0.000000	 10.324491
139	 5	 5	 1	 4.585476	 -1	 0.000000	 7.386240
140	 5	 5	 1	 0.247976	 -1	 0.000000	 7.628394
141	 5	 5	 1	 3.365510	 -1	 0.000000	 5.730488
142	 5	 5	 1	 7.179302	 -1	 0.000000	 6.224068
143	 5	 5	 1	 6.235709	 -1	 0.000000	 9.410475
144	 5	 5	 1	 7.657606	 -1	 0.000000	 5.840166
145	 5	 5	 1	 3.844967	 -1	 0.000000	 6.737398
146	 5	 5	 1	 4.002806	 -1	 0.000000	 6.209641
147	 5	 5	 1	 0.383735	 -1	 0.000000	 8.074428
148	 5	 5	 1	 8.089333	 -1	 0.000000	 5.789806
149	 5	 5	 1	 1.928603	 -1	 0.000000	 13.111259
150	 5	 5	 1	 5.461496	 -1	 0.000000	 12.919058
151	 5	 5	 1	 4.261437	 -1	 0.000000	 12.909516
152	 5	 5	 1	 13.100517	 -1	 0.000000	 5.295248
153	 5	 5	 1	 0.687051	 -1	 0.000000	 9.402403
154	 5	 5	 1	 2.548168	 -1	 0.000000	 7.082750
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 5	 5	 1	 0.613393	 -1	 0.000000	 7.245074
1	 5	 5	 1	 0.706297	 -1	 0.000000	 5.433991
2	 5	 5	 1	 0.583516	 -1	 0.000000	 7.778003
3	 5	 5	 1	 5.776580	 -1	 0.000000	 6.156161
4	 5	 5	 1	 2.273152	 -1	 0.000000	 5.953146
5	 5	 5	 1	 0.918445	 -1	 0.000000	 8.001565
6	 5	 5	 1	 0.354773	 -1	 0.000000	 4.984648
7	 5	 5	 1	 1.059344	 -1	 0.000000	 9.733824
8	 5	 5	 1	 0.747389	 -1	 0.000000	 7.190325
9	 5	 5	 1	 7.441046	 -1	 0.000000	 5.183539
10	 5	 5	 1	 2.156101	 -1	 0.000000	 8.863379
11	 5	 5	 1	 3.910643	 -1	 0.000000	 5.120756
12	 5	 5	 1	 1.909987	 -1	 0.000000	 9.867245
13	 5	 5	 1	 3.111485	 -1	 0.000000	 5.030809
14	 5	 5	 1	 1.070593	 -1	 0.000000	 12.537971
15	 5	 5	 1	 3.379350	 -1	 0.000000	 3.794853
16	 5	 5	 1	 6.007003	 -1	 0.000000	 7.453423
17	 5	 5	 1	 0.933409	 -1	 0.000000	 5.676143
18	 5	 5	 1	 6.652733	 -1	 0.000000	 5.010747
19	 5	 5	 1	 2.794710	 -1	 0.000000	 12.267901
20	 5	 5	 1	 1.111807	 -1	 0.000000	 4.959375
21	 5	 5	 1	 2.519161	 -1	 0.000000	 5.069441
22	 5	 5	 1	 1.075785	 -1	 0.000000	 5.388247
23	 5	 5	 1	 1.467659	 -1	 0.000000	 5.569082
24	 5	 5	 1	 11.170694	 -1	 0.000000	 7.638214
25	 5	 5	 1	 3.104576	 -1	 0.000000	 3.273640
26	 5	 5	 1	 4.229124	 -1	 0.000000	 5.278320
27	 5	 5	 1	 0.160216	 -1	 0.000000	 4.923971
28	 5	 5	 1	 0.516459	 -1	 0.000000	 9.907352
29	 5	 5	 1	 0.607498	 -1	 0.000000	 4.858117
30	 5	 5	 1	 3.058576	 -1	 0.000000	 7.672557
31	 5	 5	 1	 1.369798	 -1	 0.000000	 9.219820
32	 5	 5	 1	 1.765906	 -1	 0.000000	 6.056623
33	 5	 5	 1	 4.643860	 -1	 0.000000	 5.239975
34	 5	 5	 1	 2.177665	 -1	 0.000000	 5.087809
35	 5	 5	 1	 0.252436	 -1	 0.000000	 9.321427
36	 5	 5	 1	 3.155054	 -1	 0.000000	 6.886187
37	 5	 5	 1	 1.761955	 -1	 0.000000	 8.849584
38	 5	 5	 1	 4.251405	 -1	 0.000000	 8.659848
39	 5	 5	 1	 2.574927	 -1	 0.000000	 5.557558
40	 5	 5	 1	 0.181344	 -1	 0.000000	 7.422370
41	 5	 5	 1	 3.136594	 -1	 0.000000	 9.540101
42	 5	 5	 1	 3.010355	 -1	 0.000000	 7.755274
43	 5	 5	 1	 0.798634	 -1	 0.000000	 7.827067
44	 5	 5	 1	 0.776951	 -1	 0.000000	 7.817269
45	 5	 5	 1	 0.872169	 -1	 0.000000	 6.813992
46	 5	 5	 1	 13.467345	 -1	 0.000000	 6.889915
47	 5	 5	 1	 2.669396	 -1	 0.000000	 6.912971
48	 5	 5	 1	 0.796657	 -1	 0.000000	 6.006488
49	 5	 5	 1	 3.037892	 -1	 0.000000	 7.368132
50	 5	 5	 1	 1.150914	 -1	 0.000000	 8.760000
51	 5	 5	 1	 4.846137	 -1	 0.000000	 8.304019
52	 5	 5	 1	 3.483236	 -1	 0.000000	 4.871083
53	 5	 5	 1	 4.513945	 -1	 0.000000	 13.817502
54	 5	 5	 1	 11.295347	 -1	 0.000000	 9.638455
55	 5	 5	 1	 2.374505	 -1	 0.000000	 3.004484
56	 5	 5	 1	 1.702427	 -1	 0.000000	 8.142693
57	 5	 5	 1	 6.191594	 -1	 0.000000	 5.969630
58	 5	 5	 1	 2.123155	 -1	 0.000000	 6.625077
59	 5	 5	 1	 3.303303	 -1	 0.000000	 5.949435
60	 5	 5	 1	 3.672641	 -1	 0.000000	 4.597019
61	 5	 5	 1	 0.844603	 -1	 0.000000	 6.533897
62	 5	 5	 1	 4.652477	 -1	 0.000000	 4.423054
63	 5	 5	 1	 1.124799	 -1	 0.000000	 10.816995
64	 5	 5	 1	 0.755891	 -1	 0.000000	 6.663557
65	 5	 5	 1	 2.148198	 -1	 0.000000	 8.546352
66	 5	 5	 1	 0.666543	 -1	 0.000000	 7.253139
67	 5	 5	 1	 3.324231	 -1	 0.000000	 8.524714
68	 5	 5	 1	 0.465377	 -1	 0.000000	 6.926585
69	 5	 5	 1	 3.683942	 -1	 0.000000	 6.078139
70	 5	 5	 1	 1.969051	 -1	 0.000000	 7.279716
71	 5	 5	 1	 2.856824	 -1	 0.000000	 5.670136
72	 5	 5	 1	 0.972616	 -1	 0.000000	 5.188120
73	 5	 5	 1	 1.477179	 -1	 0.000000	 7.521821
74	 5	 5	 1	 6.702704	 -1	 0.000000	 6.635578
75	 5	 5	 1	 2.542940	 -1	 0.000000	 4.592365
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 7	 7	 1	 18.632034	 -1	 0.000000	 6.234202
1	 7	 7	 1	 6.499396	 -1	 0.000000	 8.186425
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 7	 7	 1	 21.121660	 -1	 0.000000	 4.427460
1	 7	 7	 1	 8.440128	 -1	 0.000000	 4.412549
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 9	 9	 0	 335.779957	 -1	 0.000000	 4.891462
1	 9	 9	 0	 276.412490	 -1	 0.000000	 6.400412
2	 9	 9	 0	 285.123618	 -1	 0.000000	 6.694840
3	 9	 9	 0	 303.524759	 -1	 0.000000	 10.787295
4	 9	 9	 1	 199.574057	 -1	 0.000000	 7.653493
5	 9	 9	 1	 200.599460	 -1	 0.000000	 10.384347
6	 9	 9	 0	 291.374915	 -1	 0.000000	 7.894578
7	 9	 9	 1	 227.957901	 -1	 0.000000	 13.564651
8	 9	 9	 1	 247.498506	 -1	 0.000000	 5.728149
9	 9	 9	 0	 337.370472	 -1	 0.000000	 5.649390
10	 9	 9	 1	 288.677117	 -1	 0.000000	 8.493992
11	 9	 9	 1	 305.853255	 -1	 0.000000	 4.647770
12	 9	 9	 1	 215.907789	 -1	 0.000000	 11.239423
13	 9	 9	 1	 182.795382	 -1	 0.000000	 5.628854
14	 9	 9	 0	 308.813212	 -1	 0.000000	 5.955141
15	 9	 9	 1	 241.478890	 -1	 0.000000	 6.055307
16	 9	 9	 0	 306.213564	 -1	 0.000000	 7.476015
17	 9	 9	 1	 235.898969	 -1	 0.000000	 9.104148
18	 9	 9	 1	 324.665832	 -1	 0.000000	 5.981287
19	 9	 9	 1	 219.878667	 -1	 0.000000	 4.512599
20	 9	 9	 0	 289.786926	 -1	 0.000000	 5.321267
21	 9	 9	 0	 303.110302	 -1	 0.000000	 8.236782
22	 9	 9	 1	 215.827291	 -1	 0.000000	 6.681076
23	 9	 9	 0	 335.427100	 -1	 0.000000	 9.095925
24	 9	 9	 1	 246.087792	 -1	 0.000000	 5.483379
25	 9	 9	 1	 279.178956	 -1	 0.000000	 5.268504
26	 9	 9	 1	 253.060103	 -1	 0.000000	 7.305558
27	 9	 9	 0	 328.321458	 -1	 0.000000	 3.668257
28	 9	 9	 0	 290.347756	 -1	 0.000000	 7.915949
29	 9	 9	 0	 295.606340	 -1	 0.000000	 6.209428
30	 9	 9	 1	 248.752912	 -1	 0.000000	 9.130416
31	 9	 9	 1	 254.546931	 -1	 0.000000	 7.196364
32	 9	 9	 1	 213.615945	 -1	 0.000000	 8.913216
33	 9	 9	 1	 213.125979	 -1	 0.000000	 6.154770
34	 9	 9	 0	 255.716672	 -1	 0.000000	 4.376937
35	 9	 9	 1	 239.719079	 -1	 0.000000	 12.451866
36	 9	 9	 1	 265.611469	 -1	 0.000000	 6.014574
37	 9	 9	 1	 235.465436	 -1	 0.000000	 7.360292
38	 9	 9	 0	 242.266248	 -1	 0.000000	 3.469489
39	 9	 9	 1	 199.584969	 -1	 0.000000	 5.868805
40	 9	 9	 1	 300.744387	 -1	 0.000000	 5.765586
41	 9	 9	 1	 339.000362	 -1	 0.000000	 5.852479
42	 9	 9	 1	 278.553588	 -1	 0.000000	 6.706233
43	 9	 9	 1	 209.057622	 -1	 0.000000	 7.987791
44	 9	 9	 0	 309.364171	 -1	 0.000000	 5.605388
45	 9	 9	 0	 349.354896	 -1	 0.000000	 3.441403
46	 9	 9	 1	 238.703890	 -1	 0.000000	 7.898028
47	 9	 9	 1	 315.885285	 -1	 0.000000	 3.986252
48	 9	 9	 1	 262.764729	 -1	 0.000000	 5.060021
49	 9	 9	 1	 244.101152	 -1	 0.000000	 5.924124
50	 9	 9	 1	 205.370169	 -1	 0.000000	 7.022859
51	 9	 9	 1	 274.007623	 -1	 0.000000	 7.258669
52	 9	 9	 1	 231.743187	 -1	 0.000000	 4.405258
53	 9	 9	 0	 319.255114	 -1	 0.000000	 5.738443
54	 9	 9	 1	 233.629553	 -1	 0.000000	 5.225167
55	 9	 9	 1	 293.331991	 -1	 0.000000	 4.428941
56	 9	 9	 1	 267.194433	 -1	 0.000000	 7.245873
57	 9	 9	 1	 187.547592	 -1	 0.000000	 12.128963
58	 9	 9	 0	 319.986060	 -1	 0.000000	 5.188543
59	 9	 9	 1	 246.547145	 -1	 0.000000	 4.587370
60	 9	 9	 0	 281.486149	 -1	 0.000000	 10.602144
61	 9	 9	 0	 330.997690	 -1	 0.000000	 6.211097
62	 9	 9	 0	 323.170720	 -1	 0.000000	 4.255617
63	 9	 9	 0	 305.318494	 -1	 0.000000	 4.464281
64	 9	 9	 1	 243.390362	 -1	 0.000000	 6.215234
65	 9	 9	 1	 203.303170	 -1	 0.000000	 5.084995
66	 9	 9	 1	 196.761231	 -1	 0.000000	 8.793492
67	 9	 9	 1	 269.753393	 -1	 0.000000	 8.184161
68	 9	 9	 0	 298.597692	 -1	 0.000000	 6.384331
69	 9	 9	 1	 212.325187	 -1	 0.000000	 7.934209
70	 9	 9	 1	 259.679648	 -1	 0.000000	 6.270668
71	 9	 9	 1	 201.597972	 -1	 0.000000	 8.298851
72	 9	 9	 1	 238.704300	 -1	 0.000000	 5.321050
73	 9	 9	 1	 218.923549	 -1	 0.000000	 7.116545
74	 9	 9	 0	 291.795548	 -1	 0.000000	 5.466123
75	 9	 9	 0	 275.710375	 -1	 0.000000	 4.883832
76	 9	 9	 0	 260.406380	 -1	 0.000000	 8.776338
77	 9	 9	 1	 233.099387	 -1	 0.000000	 4.532876
78	 9	 9	 1	 253.729571	 -1	 0.000000	 5.570082
79	 9	 9	 1	 267.724638	 -1	 0.000000	 4.214716
80	 9	 9	 0	 304.484614	 -1	 0.000000	 3.328080
81	 9	 9	 1	 248.245179	 -1	 0.000000	 9.787584
82	 9	 9	 1	 265.691733	 -1	 0.000000	 4.840682
83	 9	 9	 1	 301.498350	 -1	 0.000000	 5.197962
84	 9	 9	 0	 282.512081	 -1	 0.000000	 7.679068
85	 9	 9	 1	 216.972781	 -1	 0.000000	 9.925591
86	 9	 9	 0	 334.221247	 -1	 0.000000	 5.155434
87	 9	 9	 1	 214.665328	 -1	 0.000000	 5.675458
88	 9	 9	 1	 250.788156	 -1	 0.000000	 7.407975
89	 9	 9	 1	 258.533555	 -1	 0.000000	 8.294119
90	 9	 9	 1	 245.842735	 -1	 0.000000	 4.530551
91	 9	 9	 1	 255.288117	 -1	 0.000000	 10.944092
92	 9	 9	 1	 207.454037	 -1	 0.000000	 6.234710
93	 9	 9	 1	 226.135615	 -1	 0.000000	 9.839992
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 10	 10	 0	 465.154797	 -1	 0.000000	 7.340960
1	 10	 10	 0	 472.555644	 -1	 0.000000	 5.439281
