>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 13	 13	 1	 0.050967	 -1	 0.000000	 7.123287
1	 13	 13	 1	 0.002084	 -1	 0.000000	 3.497300
2	 13	 13	 1	 0.000941	 -1	 0.000000	 2.157686
3	 13	 13	 1	 0.000348	 -1	 0.000000	 2.622796
4	 13	 13	 1	 0.002778	 -1	 0.000000	 7.168365
5	 13	 13	 1	 0.000499	 -1	 0.000000	 6.772613
6	 13	 13	 1	 0.000590	 -1	 0.000000	 6.431732
7	 13	 13	 1	 0.001857	 -1	 0.000000	 3.747907
8	 13	 13	 1	 0.003493	 -1	 0.000000	 2.587432
9	 13	 13	 1	 0.001273	 -1	 0.000000	 7.292359
10	 13	 13	 1	 0.000681	 -1	 0.000000	 4.134290
11	 13	 13	 1	 0.001651	 -1	 0.000000	 2.919089
12	 13	 13	 1	 0.003963	 -1	 0.000000	 3.104286
13	 13	 13	 1	 0.001652	 -1	 0.000000	 5.280560
14	 13	 13	 1	 0.000086	 -1	 0.000000	 6.340479
15	 13	 13	 1	 0.001045	 -1	 0.000000	 6.936708
16	 13	 13	 1	 0.000403	 -1	 0.000000	 2.621619
17	 13	 13	 1	 0.000652	 -1	 0.000000	 6.373181
18	 13	 13	 1	 0.008297	 -1	 0.000000	 12.798883
19	 13	 13	 1	 0.006892	 -1	 0.000000	 3.253649
20	 13	 13	 1	 0.000558	 -1	 0.000000	 3.658386
21	 13	 13	 1	 0.002264	 -1	 0.000000	 4.031388
22	 13	 13	 1	 0.000784	 -1	 0.000000	 3.693811
23	 13	 13	 1	 0.000433	 -1	 0.000000	 3.802726
24	 13	 13	 1	 0.002849	 -1	 0.000000	 7.947888
25	 13	 13	 1	 0.065428	 -1	 0.000000	 6.917349
26	 13	 13	 1	 0.006756	 -1	 0.000000	 5.878008
27	 13	 13	 1	 0.001331	 -1	 0.000000	 9.390030
28	 13	 13	 1	 0.009783	 -1	 0.000000	 6.882233
29	 13	 13	 1	 0.009344	 -1	 0.000000	 4.117644
30	 13	 13	 1	 0.000916	 -1	 0.000000	 3.491232
31	 13	 13	 1	 0.000705	 -1	 0.000000	 9.339652
32	 13	 13	 1	 0.001168	 -1	 0.000000	 8.219421
33	 13	 13	 1	 0.000579	 -1	 0.000000	 7.154469
34	 13	 13	 1	 0.000220	 -1	 0.000000	 5.256546
35	 13	 13	 1	 0.004588	 -1	 0.000000	 3.625032
36	 13	 13	 1	 0.013816	 -1	 0.000000	 6.321699
37	 13	 13	 1	 0.000463	 -1	 0.000000	 4.249425
38	 13	 13	 1	 0.002930	 -1	 0.000000	 5.428070
39	 13	 13	 1	 0.007945	 -1	 0.000000	 5.354845
40	 13	 13	 1	 0.003465	 -1	 0.000000	 4.863487
41	 13	 13	 1	 0.000392	 -1	 0.000000	 8.464272
42	 13	 13	 1	 0.002108	 -1	 0.000000	 6.290412
43	 13	 13	 1	 0.004890	 -1	 0.000000	 4.693903
44	 13	 13	 1	 0.002511	 -1	 0.000000	 3.716860
45	 13	 13	 1	 0.002853	 -1	 0.000000	 2.221311
46	 13	 13	 1	 0.000503	 -1	 0.000000	 3.385281
47	 13	 13	 1	 0.001250	 -1	 0.000000	 2.973278
48	 13	 13	 1	 0.002265	 -1	 0.000000	 3.108752
49	 13	 13	 1	 0.000535	 -1	 0.000000	 3.191628
50	 13	 13	 1	 0.001316	 -1	 0.000000	 3.742485
51	 13	 13	 1	 0.004084	 -1	 0.000000	 2.949065
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 15	 15	 1	 0.020370	 -1	 0.000000	 4.651494
1	 15	 15	 1	 0.007971	 -1	 0.000000	 3.695735
2	 15	 15	 1	 0.020920	 -1	 0.000000	 3.674289
3	 15	 15	 1	 0.022123	 -1	 0.000000	 6.589227
4	 15	 15	 1	 0.003187	 -1	 0.000000	 3.306290
5	 15	 15	 1	 0.006238	 -1	 0.000000	 3.777496
6	 15	 15	 1	 0.160456	 -1	 0.000000	 4.178737
7	 15	 15	 1	 0.010739	 -1	 0.000000	 2.691431
8	 15	 15	 1	 0.090005	 -1	 0.000000	 3.827513
9	 15	 15	 1	 0.012490	 -1	 0.000000	 6.979796
10	 15	 15	 1	 0.015956	 -1	 0.000000	 8.310148
11	 15	 15	 1	 0.023487	 -1	 0.000000	 3.236175
12	 15	 15	 1	 0.072683	 -1	 0.000000	 5.256424
13	 15	 15	 1	 6.871628	 -1	 0.000000	 4.109233
14	 15	 15	 1	 0.012241	 -1	 0.000000	 3.696085
15	 15	 15	 1	 0.114725	 -1	 0.000000	 4.948485
16	 15	 15	 1	 0.720998	 -1	 0.000000	 3.114728
17	 15	 15	 1	 0.005120	 -1	 0.000000	 3.970628
18	 15	 15	 1	 0.338677	 -1	 0.000000	 5.544796
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 5	 5	 1	 7.758750	 -1	 0.000000	 4.603645
1	 5	 5	 1	 2.229497	 -1	 0.000000	 5.699669
2	 5	 5	 1	 1.287876	 -1	 0.000000	 2.687229
3	 5	 5	 1	 7.633267	 -1	 0.000000	 2.786390
4	 5	 5	 1	 0.477490	 -1	 0.000000	 9.593132
5	 5	 5	 1	 1.087722	 -1	 0.000000	 2.526152
6	 5	 5	 1	 7.886008	 -1	 0.000000	 4.175958
7	 5	 5	 1	 6.414368	 -1	 0.000000	 2.439481
8	 5	 5	 1	 4.296146	 -1	 0.000000	 4.692666
9	 5	 5	 1	 4.935277	 -1	 0.000000	 6.668729
10	 5	 5	 1	 4.543431	 -1	 0.000000	 3.756772
11	 5	 5	 1	 1.873018	 -1	 0.000000	 4.349245
12	 5	 5	 1	 2.410372	 -1	 0.000000	 7.000968
13	 5	 5	 1	 2.404005	 -1	 0.000000	 6.843585
14	 5	 5	 1	 3.270444	 -1	 0.000000	 5.102683
15	 5	 5	 1	 16.281892	 -1	 0.000000	 7.223867
16	 5	 5	 1	 7.916469	 -1	 0.000000	 4.238749
17	 5	 5	 1	 7.366647	 -1	 0.000000	 5.133264
18	 5	 5	 1	 2.439451	 -1	 0.000000	 3.273221
19	 5	 5	 1	 17.692061	 -1	 0.000000	 7.681380
20	 5	 5	 1	 9.573772	 -1	 0.000000	 3.858194
21	 5	 5	 1	 3.334345	 -1	 0.000000	 5.579892
22	 5	 5	 1	 7.800875	 -1	 0.000000	 6.061040
23	 5	 5	 1	 6.697031	 -1	 0.000000	 4.552601
24	 5	 5	 1	 3.087821	 -1	 0.000000	 12.517003
25	 5	 5	 1	 2.192538	 -1	 0.000000	 5.573653
26	 5	 5	 1	 1.837255	 -1	 0.000000	 2.896190
27	 5	 5	 1	 2.435859	 -1	 0.000000	 3.655978
28	 5	 5	 1	 3.685123	 -1	 0.000000	 4.416211
29	 5	 5	 1	 1.975463	 -1	 0.000000	 5.595225
30	 5	 5	 1	 1.128306	 -1	 0.000000	 9.578467
31	 5	 5	 1	 4.763807	 -1	 0.000000	 3.368542
32	 5	 5	 1	 0.896096	 -1	 0.000000	 7.997701
33	 5	 5	 1	 2.202418	 -1	 0.000000	 4.850513
34	 5	 5	 1	 17.656166	 -1	 0.000000	 12.187583
35	 5	 5	 1	 1.119694	 -1	 0.000000	 5.364119
36	 5	 5	 1	 1.818381	 -1	 0.000000	 6.254751
37	 5	 5	 1	 1.430006	 -1	 0.000000	 12.656215
38	 5	 5	 1	 8.096335	 -1	 0.000000	 7.046563
39	 5	 5	 1	 14.954549	 -1	 0.000000	 4.357571
40	 5	 5	 1	 10.947326	 -1	 0.000000	 6.811163
41	 5	 5	 1	 1.190617	 -1	 0.000000	 3.123116
42	 5	 5	 1	 0.990826	 -1	 0.000000	 6.185745
43	 5	 5	 1	 16.196136	 -1	 0.000000	 4.442394
44	 5	 5	 1	 26.871446	 -1	 0.000000	 2.919289
45	 5	 5	 1	 8.879097	 -1	 0.000000	 3.471630
46	 5	 5	 1	 3.743440	 -1	 0.000000	 8.412801
47	 5	 5	 1	 5.728117	 -1	 0.000000	 4.581166
48	 5	 5	 1	 5.261402	 -1	 0.000000	 7.342837
49	 5	 5	 1	 4.261578	 -1	 0.000000	 7.418354
50	 5	 5	 1	 1.604336	 -1	 0.000000	 3.395612
51	 5	 5	 1	 7.310028	 -1	 0.000000	 6.278486
52	 5	 5	 1	 4.849806	 -1	 0.000000	 3.962901
53	 5	 5	 1	 2.810164	 -1	 0.000000	 4.525174
54	 5	 5	 1	 2.608414	 -1	 0.000000	 4.435680
55	 5	 5	 1	 13.587278	 -1	 0.000000	 9.802562
56	 5	 5	 1	 13.605312	 -1	 0.000000	 5.285393
57	 5	 5	 1	 1.239118	 -1	 0.000000	 3.653876
58	 5	 5	 1	 8.796617	 -1	 0.000000	 3.747112
59	 5	 5	 1	 4.214849	 -1	 0.000000	 5.980948
60	 5	 5	 1	 5.237402	 -1	 0.000000	 3.772982
61	 5	 5	 1	 10.212669	 -1	 0.000000	 5.170392
62	 5	 5	 1	 4.309835	 -1	 0.000000	 7.606905
63	 5	 5	 1	 2.571397	 -1	 0.000000	 6.676566
64	 5	 5	 1	 10.495378	 -1	 0.000000	 6.069747
65	 5	 5	 1	 3.144076	 -1	 0.000000	 4.565680
66	 5	 5	 1	 3.983145	 -1	 0.000000	 5.295701
67	 5	 5	 1	 18.083623	 -1	 0.000000	 6.622542
68	 5	 5	 1	 6.156968	 -1	 0.000000	 7.708207
69	 5	 5	 1	 2.963684	 -1	 0.000000	 4.464540
70	 5	 5	 1	 2.285583	 -1	 0.000000	 5.226280
71	 5	 5	 1	 12.467725	 -1	 0.000000	 5.867762
72	 5	 5	 1	 4.989481	 -1	 0.000000	 3.400941
73	 5	 5	 1	 3.925450	 -1	 0.000000	 7.515008
74	 5	 5	 1	 1.373727	 -1	 0.000000	 8.953673
75	 5	 5	 1	 10.595950	 -1	 0.000000	 4.239608
76	 5	 5	 1	 5.269097	 -1	 0.000000	 4.290203
77	 5	 5	 1	 3.844561	 -1	 0.000000	 5.087955
78	 5	 5	 1	 7.291375	 -1	 0.000000	 7.435671
79	 5	 5	 1	 1.697457	 -1	 0.000000	 2.726246
80	 5	 5	 1	 2.593198	 -1	 0.000000	 6.329464
81	 5	 5	 1	 3.689710	 -1	 0.000000	 4.483959
82	 5	 5	 1	 10.478033	 -1	 0.000000	 7.757586
83	 5	 5	 1	 0.868461	 -1	 0.000000	 3.581607
84	 5	 5	 1	 4.725622	 -1	 0.000000	 3.937095
85	 5	 5	 1	 3.223196	 -1	 0.000000	 3.538877
86	 5	 5	 1	 4.332568	 -1	 0.000000	 5.842924
87	 5	 5	 1	 4.104811	 -1	 0.000000	 7.402670
88	 5	 5	 1	 5.816430	 -1	 0.000000	 4.377532
89	 5	 5	 1	 11.959467	 -1	 0.000000	 4.472601
90	 5	 5	 1	 1.289623	 -1	 0.000000	 3.858017
91	 5	 5	 1	 4.415589	 -1	 0.000000	 7.835947
92	 5	 5	 1	 10.548333	 -1	 0.000000	 7.209655
93	 5	 5	 1	 1.473644	 -1	 0.000000	 4.538540
94	 5	 5	 1	 3.428840	 -1	 0.000000	 3.614678
95	 5	 5	 1	 9.182116	 -1	 0.000000	 8.799762
96	 5	 5	 1	 3.365632	 -1	 0.000000	 3.365706
97	 5	 5	 1	 0.998948	 -1	 0.000000	 4.285402
98	 5	 5	 1	 9.326842	 -1	 0.000000	 4.255410
99	 5	 5	 1	 2.711925	 -1	 0.000000	 6.321752
100	 5	 5	 1	 1.284928	 -1	 0.000000	 6.204470
101	 5	 5	 1	 13.160068	 -1	 0.000000	 2.371576
102	 5	 5	 1	 2.162057	 -1	 0.000000	 3.522516
103	 5	 5	 1	 8.327794	 -1	 0.000000	 7.403271
104	 5	 5	 1	 2.777458	 -1	 0.000000	 4.432975
105	 5	 5	 1	 3.552142	 -1	 0.000000	 4.357014
106	 5	 5	 1	 5.079566	 -1	 0.000000	 3.900770
107	 5	 5	 1	 2.932726	 -1	 0.000000	 10.144804
108	 5	 5	 1	 4.273076	 -1	 0.000000	 4.784500
109	 5	 5	 1	 3.615138	 -1	 0.000000	 4.806544
110	 5	 5	 1	 5.445861	 -1	 0.000000	 5.302454
111	 5	 5	 1	 1.127618	 -1	 0.000000	 12.007378
112	 5	 5	 1	 5.275486	 -1	 0.000000	 4.034027
113	 5	 5	 1	 10.441884	 -1	 0.000000	 3.370387
114	 5	 5	 1	 5.745861	 -1	 0.000000	 3.286188
115	 5	 5	 1	 2.125587	 -1	 0.000000	 7.590664
116	 5	 5	 1	 5.356969	 -1	 0.000000	 6.482274
117	 5	 5	 1	 1.901824	 -1	 0.000000	 5.200492
118	 5	 5	 1	 1.651695	 -1	 0.000000	 5.801052
119	 5	 5	 1	 7.673646	 -1	 0.000000	 8.529757
120	 5	 5	 1	 3.635544	 -1	 0.000000	 5.463978
121	 5	 5	 1	 8.227980	 -1	 0.000000	 6.356158
122	 5	 5	 1	 4.903306	 -1	 0.000000	 4.425940
123	 5	 5	 1	 4.723546	 -1	 0.000000	 10.426019
124	 5	 5	 1	 0.747433	 -1	 0.000000	 6.732242
125	 5	 5	 1	 6.106067	 -1	 0.000000	 3.394968
126	 5	 5	 1	 9.608481	 -1	 0.000000	 4.866255
127	 5	 5	 1	 6.299390	 -1	 0.000000	 5.392602
128	 5	 5	 1	 9.224018	 -1	 0.000000	 5.301772
129	 5	 5	 1	 9.410918	 -1	 0.000000	 6.041877
130	 5	 5	 1	 1.346015	 -1	 0.000000	 8.743991
131	 5	 5	 1	 3.467403	 -1	 0.000000	 2.519952
132	 5	 5	 1	 2.829834	 -1	 0.000000	 15.173143
133	 5	 5	 1	 4.359832	 -1	 0.000000	 5.222313
134	 5	 5	 1	 2.246155	 -1	 0.000000	 3.894240
135	 5	 5	 1	 3.807777	 -1	 0.000000	 4.529539
136	 5	 5	 1	 1.268215	 -1	 0.000000	 3.431668
137	 5	 5	 1	 10.888105	 -1	 0.000000	 4.357156
138	 5	 5	 1	 1.497942	 -1	 0.000000	 3.500021
139	 5	 5	 1	 4.312092	 -1	 0.000000	 11.020708
140	 5	 5	 1	 3.026619	 -1	 0.000000	 9.073101
141	 5	 5	 1	 0.889716	 -1	 0.000000	 3.511409
142	 5	 5	 1	 3.977486	 -1	 0.000000	 13.427629
143	 5	 5	 1	 8.224149	 -1	 0.000000	 2.506926
144	 5	 5	 1	 3.834353	 -1	 0.000000	 2.929253
145	 5	 5	 1	 2.698751	 -1	 0.000000	 5.750401
146	 5	 5	 1	 6.881887	 -1	 0.000000	 4.873796
147	 5	 5	 1	 8.403843	 -1	 0.000000	 5.815345
148	 5	 5	 1	 10.187316	 -1	 0.000000	 3.647873
149	 5	 5	 1	 1.575953	 -1	 0.000000	 5.744624
150	 5	 5	 1	 0.396930	 -1	 0.000000	 14.954365
151	 5	 5	 1	 2.600896	 -1	 0.000000	 6.285331
152	 5	 5	 1	 4.433355	 -1	 0.000000	 8.741980
153	 5	 5	 1	 2.129091	 -1	 0.000000	 4.481178
154	 5	 5	 1	 3.063469	 -1	 0.000000	 4.721494
155	 5	 5	 1	 1.267985	 -1	 0.000000	 2.789635
156	 5	 5	 1	 5.389481	 -1	 0.000000	 4.451745
157	 5	 5	 1	 13.484712	 -1	 0.000000	 4.597196
158	 5	 5	 1	 0.791853	 -1	 0.000000	 6.609562
159	 5	 5	 1	 1.187396	 -1	 0.000000	 3.643071
160	 5	 5	 1	 6.642808	 -1	 0.000000	 2.977376
161	 5	 5	 1	 7.257744	 -1	 0.000000	 7.022341
162	 5	 5	 1	 1.674346	 -1	 0.000000	 3.757913
163	 5	 5	 1	 6.945917	 -1	 0.000000	 6.059337
164	 5	 5	 1	 0.706797	 -1	 0.000000	 6.973160
165	 5	 5	 1	 1.843256	 -1	 0.000000	 12.474856
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 7	 7	 1	 7.500947	 -1	 0.000000	 5.607503
1	 7	 7	 1	 9.334276	 -1	 0.000000	 12.859010
2	 7	 7	 1	 41.622171	 -1	 0.000000	 6.111727
3	 7	 7	 1	 24.171828	 -1	 0.000000	 7.609078
4	 7	 7	 1	 16.010763	 -1	 0.000000	 9.049597
5	 7	 7	 1	 39.602937	 -1	 0.000000	 8.029207
6	 7	 7	 1	 39.257694	 -1	 0.000000	 4.669850
7	 7	 7	 1	 14.202302	 -1	 0.000000	 5.870789
8	 7	 7	 1	 11.383195	 -1	 0.000000	 2.922533
9	 7	 7	 1	 22.970770	 -1	 0.000000	 3.141586
10	 7	 7	 1	 18.176089	 -1	 0.000000	 5.049653
11	 7	 7	 1	 22.643802	 -1	 0.000000	 4.664927
12	 7	 7	 1	 24.730623	 -1	 0.000000	 4.588100
13	 7	 7	 1	 19.989515	 -1	 0.000000	 3.496969
14	 7	 7	 1	 8.744906	 -1	 0.000000	 5.065334
15	 7	 7	 1	 23.637947	 -1	 0.000000	 17.511860
16	 7	 7	 1	 25.005368	 -1	 0.000000	 2.210681
17	 7	 7	 1	 45.725201	 -1	 0.000000	 9.860728
18	 7	 7	 1	 17.458001	 -1	 0.000000	 3.782454
19	 7	 7	 1	 14.003371	 -1	 0.000000	 4.668285
20	 7	 7	 1	 22.553525	 -1	 0.000000	 10.770661
21	 7	 7	 1	 29.278792	 -1	 0.000000	 7.354270
22	 7	 7	 1	 8.130767	 -1	 0.000000	 6.176092
23	 7	 7	 1	 25.688849	 -1	 0.000000	 4.468184
24	 7	 7	 1	 11.060409	 -1	 0.000000	 2.763245
25	 7	 7	 1	 12.821195	 -1	 0.000000	 5.969296
26	 7	 7	 1	 20.127617	 -1	 0.000000	 3.187814
27	 7	 7	 1	 22.619554	 -1	 0.000000	 5.156329
28	 7	 7	 1	 8.165629	 -1	 0.000000	 6.154509
29	 7	 7	 1	 11.196182	 -1	 0.000000	 4.649925
30	 7	 7	 1	 10.136279	 -1	 0.000000	 5.553449
31	 7	 7	 1	 13.580517	 -1	 0.000000	 11.636683
32	 7	 7	 1	 19.595651	 -1	 0.000000	 5.107293
33	 7	 7	 1	 52.882777	 -1	 0.000000	 7.243478
34	 7	 7	 1	 19.953393	 -1	 0.000000	 6.214520
35	 7	 7	 1	 23.580951	 -1	 0.000000	 4.652544
36	 7	 7	 0	 205.179096	 -1	 0.000000	 4.048925
37	 7	 7	 1	 23.940883	 -1	 0.000000	 5.735183
38	 7	 7	 1	 21.763696	 -1	 0.000000	 2.391849
39	 7	 7	 1	 24.251941	 -1	 0.000000	 12.159512
40	 7	 7	 1	 27.416658	 -1	 0.000000	 3.480078
41	 7	 7	 1	 33.166469	 -1	 0.000000	 4.435841
42	 7	 7	 1	 33.687517	 -1	 0.000000	 3.652064
43	 7	 7	 1	 11.597944	 -1	 0.000000	 9.390358
44	 7	 7	 1	 23.844616	 -1	 0.000000	 4.301650
45	 7	 7	 1	 17.669859	 -1	 0.000000	 4.102258
46	 7	 7	 1	 45.666340	 -1	 0.000000	 3.179882
47	 7	 7	 1	 35.384529	 -1	 0.000000	 3.095747
48	 7	 7	 1	 64.269450	 -1	 0.000000	 5.064772
49	 7	 7	 1	 14.067272	 -1	 0.000000	 6.055670
50	 7	 7	 1	 17.079041	 -1	 0.000000	 6.707678
51	 7	 7	 1	 29.230956	 -1	 0.000000	 3.267532
52	 7	 7	 1	 26.576509	 -1	 0.000000	 4.302110
53	 7	 7	 1	 32.306558	 -1	 0.000000	 6.381937
54	 7	 7	 1	 16.126607	 -1	 0.000000	 4.859566
55	 7	 7	 1	 28.835533	 -1	 0.000000	 3.149920
56	 7	 7	 1	 47.691501	 -1	 0.000000	 3.979600
57	 7	 7	 1	 31.537887	 -1	 0.000000	 4.384425
58	 7	 7	 1	 23.119048	 -1	 0.000000	 4.108058
59	 7	 7	 1	 29.190343	 -1	 0.000000	 8.544908
60	 7	 7	 1	 38.637274	 -1	 0.000000	 3.430515
61	 7	 7	 1	 34.311203	 -1	 0.000000	 4.820128
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 9	 9	 0	 312.068306	 -1	 0.000000	 3.461883
1	 9	 9	 0	 362.187973	 -1	 0.000000	 5.774411
2	 9	 9	 0	 397.785979	 -1	 0.000000	 6.360944
3	 9	 9	 1	 243.208006	 -1	 0.000000	 4.594440
4	 9	 9	 0	 398.064283	 -1	 0.000000	 2.899724
5	 9	 9	 1	 224.481177	 -1	 0.000000	 5.503436
6	 9	 9	 0	 390.077481	 -1	 0.000000	 4.332123
7	 9	 9	 0	 380.294057	 -1	 0.000000	 4.059663
8	 9	 9	 1	 200.437426	 -1	 0.000000	 4.514367
9	 9	 9	 0	 360.496204	 -1	 0.000000	 5.273464
10	 9	 9	 0	 371.525383	 -1	 0.000000	 3.034816
11	 9	 9	 1	 219.423603	 -1	 0.000000	 5.948718
12	 9	 9	 0	 348.671911	 -1	 0.000000	 4.285718
13	 9	 9	 1	 208.280725	 -1	 0.000000	 8.017114
14	 9	 9	 0	 382.240136	 -1	 0.000000	 5.342213
15	 9	 9	 0	 229.586361	 -1	 0.000000	 10.235485
16	 9	 9	 0	 291.647809	 -1	 0.000000	 5.473365
17	 9	 9	 0	 325.322101	 -1	 0.000000	 7.748687
18	 9	 9	 1	 182.545744	 -1	 0.000000	 4.679283
19	 9	 9	 0	 364.823643	 -1	 0.000000	 6.097275
20	 9	 9	 0	 352.203168	 -1	 0.000000	 8.766277
21	 9	 9	 1	 217.854821	 -1	 0.000000	 3.823935
22	 9	 9	 0	 358.689181	 -1	 0.000000	 3.335247
23	 9	 9	 0	 298.686764	 -1	 0.000000	 4.920873
24	 9	 9	 0	 298.587668	 -1	 0.000000	 3.478368
25	 9	 9	 0	 323.015483	 -1	 0.000000	 6.760196
26	 9	 9	 0	 389.763894	 -1	 0.000000	 4.032110
27	 9	 9	 1	 232.579240	 -1	 0.000000	 2.786519
28	 9	 9	 0	 392.510507	 -1	 0.000000	 3.011308
29	 9	 9	 0	 388.867228	 -1	 0.000000	 3.698478
30	 9	 9	 1	 273.000505	 -1	 0.000000	 4.959614
31	 9	 9	 0	 370.080038	 -1	 0.000000	 3.992743
32	 9	 9	 0	 351.501777	 -1	 0.000000	 5.561997
33	 9	 9	 0	 371.913849	 -1	 0.000000	 3.341609
34	 9	 9	 0	 389.704108	 -1	 0.000000	 3.155917
35	 9	 9	 0	 350.892754	 -1	 0.000000	 4.992629
36	 9	 9	 1	 215.034237	 -1	 0.000000	 11.132056
37	 9	 9	 0	 359.960114	 -1	 0.000000	 6.739743
38	 9	 9	 1	 183.537924	 -1	 0.000000	 7.020115
39	 9	 9	 0	 319.817752	 -1	 0.000000	 6.039653
40	 9	 9	 1	 200.262618	 -1	 0.000000	 3.198972
41	 9	 9	 0	 417.701782	 -1	 0.000000	 3.759284
42	 9	 9	 1	 243.816825	 -1	 0.000000	 1.922848
43	 9	 9	 1	 133.890909	 -1	 0.000000	 8.708220
44	 9	 9	 1	 188.332453	 -1	 0.000000	 2.981431
45	 9	 9	 0	 377.741697	 -1	 0.000000	 2.575732
46	 9	 9	 1	 162.968401	 -1	 0.000000	 7.253988
47	 9	 9	 0	 368.503428	 -1	 0.000000	 5.332155
48	 9	 9	 1	 155.410054	 -1	 0.000000	 7.390153
49	 9	 9	 0	 344.513613	 -1	 0.000000	 7.458356
50	 9	 9	 0	 293.615912	 -1	 0.000000	 8.832391
51	 9	 9	 0	 329.390207	 -1	 0.000000	 5.344054
52	 9	 9	 1	 205.256624	 -1	 0.000000	 2.815676
53	 9	 9	 1	 186.642117	 -1	 0.000000	 3.070917
54	 9	 9	 0	 292.335651	 -1	 0.000000	 6.714645
55	 9	 9	 1	 185.106207	 -1	 0.000000	 6.064996
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 11	 11	 0	 336.866979	 -1	 0.000000	 6.996176
1	 11	 11	 0	 268.484187	 -1	 0.000000	 3.693644
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 11	 11	 0	 348.567038	 -1	 0.000000	 8.397243
1	 11	 11	 0	 295.424584	 -1	 0.000000	 2.829568
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 10	 10	 0	 461.752759	 -1	 0.000000	 3.093049
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   47 items of size 1392. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
