>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 13	 13	 1	 0.001143	 -1	 0.000000	 4.289904
1	 13	 13	 1	 0.000379	 -1	 0.000000	 6.053984
2	 13	 13	 1	 0.003464	 -1	 0.000000	 5.487185
3	 13	 13	 1	 0.001625	 -1	 0.000000	 7.936285
4	 13	 13	 1	 0.001867	 -1	 0.000000	 5.372980
5	 13	 13	 1	 0.002330	 -1	 0.000000	 8.988373
6	 13	 13	 1	 0.000563	 -1	 0.000000	 6.540950
7	 13	 13	 1	 0.001970	 -1	 0.000000	 4.951421
8	 13	 13	 1	 0.000408	 -1	 0.000000	 5.367401
9	 13	 13	 1	 0.000746	 -1	 0.000000	 7.156855
10	 13	 13	 1	 0.003637	 -1	 0.000000	 9.227602
11	 13	 13	 1	 0.000131	 -1	 0.000000	 5.075302
12	 13	 13	 1	 0.004464	 -1	 0.000000	 5.354627
13	 13	 13	 1	 0.000719	 -1	 0.000000	 12.622795
14	 13	 13	 1	 0.000426	 -1	 0.000000	 4.143702
15	 13	 13	 1	 0.001981	 -1	 0.000000	 6.783410
16	 13	 13	 1	 0.000336	 -1	 0.000000	 4.660569
17	 13	 13	 1	 0.005265	 -1	 0.000000	 5.696908
18	 13	 13	 1	 0.007883	 -1	 0.000000	 5.861295
19	 13	 13	 1	 0.000763	 -1	 0.000000	 4.466426
20	 13	 13	 1	 0.001048	 -1	 0.000000	 6.989443
21	 13	 13	 1	 0.000548	 -1	 0.000000	 6.503389
22	 13	 13	 1	 0.010426	 -1	 0.000000	 5.117739
23	 13	 13	 1	 0.000747	 -1	 0.000000	 3.657761
24	 13	 13	 1	 0.000660	 -1	 0.000000	 5.958221
25	 13	 13	 1	 0.000153	 -1	 0.000000	 9.247815
26	 13	 13	 1	 0.001201	 -1	 0.000000	 7.832933
27	 13	 13	 1	 0.001641	 -1	 0.000000	 4.067247
28	 13	 13	 1	 0.001449	 -1	 0.000000	 15.467163
29	 13	 13	 1	 0.000219	 -1	 0.000000	 10.946340
30	 13	 13	 1	 0.005253	 -1	 0.000000	 8.031424
31	 13	 13	 1	 0.000202	 -1	 0.000000	 5.741480
32	 13	 13	 1	 0.000438	 -1	 0.000000	 3.665279
33	 13	 13	 1	 0.001402	 -1	 0.000000	 6.107442
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 15	 15	 1	 0.385324	 -1	 0.000000	 4.858957
1	 15	 15	 1	 0.132980	 -1	 0.000000	 6.300822
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 5	 5	 1	 2.003605	 -1	 0.000000	 7.054454
1	 5	 5	 1	 2.445402	 -1	 0.000000	 6.903286
2	 5	 5	 1	 4.144711	 -1	 0.000000	 3.319139
3	 5	 5	 1	 2.002366	 -1	 0.000000	 5.403039
4	 5	 5	 1	 6.971000	 -1	 0.000000	 7.550191
5	 5	 5	 1	 7.144979	 -1	 0.000000	 4.206626
6	 5	 5	 1	 4.644290	 -1	 0.000000	 10.612598
7	 5	 5	 1	 22.698076	 -1	 0.000000	 6.077533
8	 5	 5	 1	 1.804166	 -1	 0.000000	 7.726344
9	 5	 5	 1	 5.029056	 -1	 0.000000	 6.685081
10	 5	 5	 1	 15.062348	 -1	 0.000000	 4.647166
11	 5	 5	 1	 0.975426	 -1	 0.000000	 8.727778
12	 5	 5	 1	 14.083269	 -1	 0.000000	 5.980267
13	 5	 5	 1	 1.648433	 -1	 0.000000	 8.586143
14	 5	 5	 1	 2.257893	 -1	 0.000000	 10.848177
15	 5	 5	 1	 4.418424	 -1	 0.000000	 3.790977
16	 5	 5	 1	 7.568469	 -1	 0.000000	 5.224300
17	 5	 5	 1	 4.307528	 -1	 0.000000	 9.740003
18	 5	 5	 1	 9.164227	 -1	 0.000000	 5.996920
19	 5	 5	 1	 7.308657	 -1	 0.000000	 6.335646
20	 5	 5	 1	 9.664098	 -1	 0.000000	 6.257719
21	 5	 5	 1	 5.110767	 -1	 0.000000	 7.944904
22	 5	 5	 1	 8.356770	 -1	 0.000000	 4.832644
23	 5	 5	 1	 1.602665	 -1	 0.000000	 10.119093
24	 5	 5	 1	 7.951045	 -1	 0.000000	 4.137667
25	 5	 5	 1	 1.690991	 -1	 0.000000	 8.032187
26	 5	 5	 1	 6.623682	 -1	 0.000000	 6.663641
27	 5	 5	 1	 5.247714	 -1	 0.000000	 5.945962
28	 5	 5	 1	 3.922473	 -1	 0.000000	 4.168109
29	 5	 5	 1	 5.211548	 -1	 0.000000	 9.122681
30	 5	 5	 1	 15.595526	 -1	 0.000000	 3.893126
31	 5	 5	 1	 11.039370	 -1	 0.000000	 4.857522
32	 5	 5	 1	 3.249447	 -1	 0.000000	 12.693129
33	 5	 5	 1	 2.185795	 -1	 0.000000	 7.740920
34	 5	 5	 1	 4.042683	 -1	 0.000000	 16.133562
35	 5	 5	 1	 7.829213	 -1	 0.000000	 7.147009
36	 5	 5	 1	 5.087743	 -1	 0.000000	 4.951109
37	 5	 5	 1	 0.822887	 -1	 0.000000	 7.087526
38	 5	 5	 1	 10.440124	 -1	 0.000000	 19.425117
39	 5	 5	 1	 3.152594	 -1	 0.000000	 11.260732
40	 5	 5	 1	 5.743086	 -1	 0.000000	 6.224746
41	 5	 5	 1	 4.666660	 -1	 0.000000	 7.198938
42	 5	 5	 1	 11.515209	 -1	 0.000000	 6.766795
43	 5	 5	 1	 0.587235	 -1	 0.000000	 9.346482
44	 5	 5	 1	 7.761849	 -1	 0.000000	 6.896734
45	 5	 5	 1	 9.325403	 -1	 0.000000	 7.782194
46	 5	 5	 1	 5.951973	 -1	 0.000000	 4.449543
47	 5	 5	 1	 4.657619	 -1	 0.000000	 4.091689
48	 5	 5	 1	 0.671808	 -1	 0.000000	 8.143051
49	 5	 5	 1	 3.339395	 -1	 0.000000	 6.466455
50	 5	 5	 1	 11.122065	 -1	 0.000000	 10.404654
51	 5	 5	 1	 3.422828	 -1	 0.000000	 11.327613
52	 5	 5	 1	 11.863854	 -1	 0.000000	 7.617868
53	 5	 5	 1	 3.906524	 -1	 0.000000	 6.114854
54	 5	 5	 1	 11.316323	 -1	 0.000000	 6.630631
55	 5	 5	 1	 1.986457	 -1	 0.000000	 11.633287
56	 5	 5	 1	 5.254581	 -1	 0.000000	 13.824331
57	 5	 5	 1	 2.042954	 -1	 0.000000	 6.045732
58	 5	 5	 1	 8.032681	 -1	 0.000000	 5.108149
59	 5	 5	 1	 7.678452	 -1	 0.000000	 4.170005
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 7	 7	 1	 3.794794	 -1	 0.000000	 6.883083
1	 7	 7	 1	 21.283431	 -1	 0.000000	 5.566186
2	 7	 7	 1	 29.905875	 -1	 0.000000	 7.593555
3	 7	 7	 1	 25.871183	 -1	 0.000000	 5.852918
4	 7	 7	 1	 9.701392	 -1	 0.000000	 7.425105
5	 7	 7	 1	 19.569543	 -1	 0.000000	 3.137007
6	 7	 7	 1	 9.839585	 -1	 0.000000	 15.012300
7	 7	 7	 1	 40.884781	 -1	 0.000000	 10.266262
8	 7	 7	 1	 26.997235	 -1	 0.000000	 7.994749
9	 7	 7	 1	 7.497618	 -1	 0.000000	 6.115013
10	 7	 7	 1	 18.103197	 -1	 0.000000	 7.190630
11	 7	 7	 1	 14.896925	 -1	 0.000000	 13.282864
12	 7	 7	 1	 34.258493	 -1	 0.000000	 4.370698
13	 7	 7	 1	 21.120679	 -1	 0.000000	 5.911789
14	 7	 7	 1	 13.966982	 -1	 0.000000	 4.090122
15	 7	 7	 1	 23.778601	 -1	 0.000000	 5.466065
16	 7	 7	 1	 10.724176	 -1	 0.000000	 6.048121
17	 7	 7	 1	 13.683656	 -1	 0.000000	 9.719522
18	 7	 7	 1	 7.263217	 -1	 0.000000	 7.113861
19	 7	 7	 1	 27.394835	 -1	 0.000000	 7.586888
20	 7	 7	 1	 19.244487	 -1	 0.000000	 8.127141
21	 7	 7	 1	 16.130135	 -1	 0.000000	 8.624269
22	 7	 7	 1	 14.433107	 -1	 0.000000	 9.797954
23	 7	 7	 1	 20.041515	 -1	 0.000000	 7.304510
24	 7	 7	 1	 11.460156	 -1	 0.000000	 6.675463
25	 7	 7	 1	 37.029594	 -1	 0.000000	 5.170218
26	 7	 7	 1	 46.811162	 -1	 0.000000	 4.160814
27	 7	 7	 1	 7.857169	 -1	 0.000000	 3.578537
28	 7	 7	 1	 81.585102	 -1	 0.000000	 4.088778
29	 7	 7	 1	 10.890901	 -1	 0.000000	 3.935625
30	 7	 7	 1	 15.307282	 -1	 0.000000	 5.009749
31	 7	 7	 1	 0.701820	 -1	 0.000000	 10.108053
32	 7	 7	 1	 9.331140	 -1	 0.000000	 9.080149
33	 7	 7	 1	 10.914776	 -1	 0.000000	 4.709329
34	 7	 7	 1	 23.025382	 -1	 0.000000	 5.190853
35	 7	 7	 1	 15.989021	 -1	 0.000000	 11.935403
36	 7	 7	 1	 11.554756	 -1	 0.000000	 3.459157
37	 7	 7	 1	 35.841763	 -1	 0.000000	 6.878294
38	 7	 7	 1	 16.448096	 -1	 0.000000	 5.754066
39	 7	 7	 1	 17.218083	 -1	 0.000000	 7.166316
40	 7	 7	 1	 50.843045	 -1	 0.000000	 4.415398
41	 7	 7	 1	 20.136252	 -1	 0.000000	 5.130697
42	 7	 7	 1	 20.988597	 -1	 0.000000	 7.621159
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 9	 9	 1	 258.009678	 -1	 0.000000	 4.607045
1	 9	 9	 0	 250.049866	 -1	 0.000000	 6.427399
2	 9	 9	 1	 212.215880	 -1	 0.000000	 5.723585
3	 9	 9	 0	 291.625682	 -1	 0.000000	 6.704472
4	 9	 9	 1	 269.687754	 -1	 0.000000	 4.714461
5	 9	 9	 1	 237.875877	 -1	 0.000000	 16.460060
6	 9	 9	 1	 185.221774	 -1	 0.000000	 5.905154
7	 9	 9	 0	 251.343831	 -1	 0.000000	 9.367746
8	 9	 9	 0	 343.554399	 -1	 0.000000	 5.554985
9	 9	 9	 0	 342.664151	 -1	 0.000000	 5.338569
10	 9	 9	 1	 190.707997	 -1	 0.000000	 7.511638
11	 9	 9	 1	 140.087033	 -1	 0.000000	 10.109274
12	 9	 9	 0	 259.761418	 -1	 0.000000	 5.104433
13	 9	 9	 0	 322.513074	 -1	 0.000000	 4.704602
14	 9	 9	 1	 260.525247	 -1	 0.000000	 7.807434
15	 9	 9	 0	 351.283076	 -1	 0.000000	 3.355293
16	 9	 9	 1	 228.652269	 -1	 0.000000	 5.463486
17	 9	 9	 0	 294.834744	 -1	 0.000000	 4.781430
18	 9	 9	 0	 248.170092	 -1	 0.000000	 5.895004
19	 9	 9	 0	 359.065199	 -1	 0.000000	 5.946573
20	 9	 9	 1	 206.666504	 -1	 0.000000	 7.162215
21	 9	 9	 0	 300.184365	 -1	 0.000000	 6.029695
22	 9	 9	 1	 274.298187	 -1	 0.000000	 4.639637
23	 9	 9	 1	 180.272387	 -1	 0.000000	 4.663727
24	 9	 9	 1	 162.470236	 -1	 0.000000	 5.016147
25	 9	 9	 0	 262.134125	 -1	 0.000000	 6.674746
26	 9	 9	 1	 223.330545	 -1	 0.000000	 5.930063
27	 9	 9	 0	 340.627543	 -1	 0.000000	 5.645416
28	 9	 9	 1	 227.379452	 -1	 0.000000	 6.368968
29	 9	 9	 1	 236.731566	 -1	 0.000000	 6.321302
30	 9	 9	 1	 139.439340	 -1	 0.000000	 10.570003
31	 9	 9	 1	 163.465657	 -1	 0.000000	 8.814027
32	 9	 9	 1	 197.957465	 -1	 0.000000	 5.636202
33	 9	 9	 1	 181.231885	 -1	 0.000000	 4.835283
34	 9	 9	 0	 344.630873	 -1	 0.000000	 4.898590
35	 9	 9	 1	 261.093170	 -1	 0.000000	 5.231164
36	 9	 9	 1	 180.528586	 -1	 0.000000	 6.879236
478	 9	 9	 1	 248.518074	 -1	 0.000000	 6.806210
479	 9	 9	 1	 244.982830	 -1	 0.000000	 8.368020
480	 9	 9	 1	 159.457001	 -1	 0.000000	 8.218887
481	 9	 9	 1	 202.538485	 -1	 0.000000	 6.587460
482	 9	 9	 1	 237.659237	 -1	 0.000000	 5.457848
483	 9	 9	 0	 291.776580	 -1	 0.000000	 5.359128
484	 9	 9	 1	 191.230403	 -1	 0.000000	 7.502846
485	 9	 9	 1	 213.893710	 -1	 0.000000	 5.806623
486	 9	 9	 1	 142.164994	 -1	 0.000000	 10.320076
487	 9	 9	 0	 340.856310	 -1	 0.000000	 3.583265
488	 9	 9	 0	 311.179588	 -1	 0.000000	 5.246076
489	 9	 9	 0	 251.840487	 -1	 0.000000	 4.962897
490	 9	 9	 1	 190.731640	 -1	 0.000000	 6.722859
491	 9	 9	 0	 236.202680	 -1	 0.000000	 6.423606
492	 9	 9	 0	 252.080585	 -1	 0.000000	 6.622365
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 11	 11	 0	 386.141695	 -1	 0.000000	 8.089455
1	 11	 11	 0	 389.968555	 -1	 0.000000	 9.165386
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   30 items of size 2160. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 11	 11	 0	 320.985480	 -1	 0.000000	 6.456477
1	 11	 11	 0	 351.857130	 -1	 0.000000	 8.478935
2	 11	 11	 0	 420.268763	 -1	 0.000000	 4.802356
3	 11	 11	 0	 356.517257	 -1	 0.000000	 13.210400
4	 11	 11	 0	 357.986954	 -1	 0.000000	 7.887149
5	 11	 11	 0	 428.622995	 -1	 0.000000	 3.490748
6	 11	 11	 0	 306.839600	 -1	 0.000000	 6.226162
7	 11	 11	 0	 389.490226	 -1	 0.000000	 4.580353
8	 11	 11	 0	 392.683299	 -1	 0.000000	 4.883046
9	 11	 11	 0	 378.749879	 -1	 0.000000	 9.380590
10	 11	 11	 0	 318.523494	 -1	 0.000000	 17.342524
11	 11	 11	 0	 284.390124	 -1	 0.000000	 5.208850
12	 11	 11	 0	 284.335031	 -1	 0.000000	 8.317964
13	 11	 11	 0	 336.384383	 -1	 0.000000	 3.490023
14	 11	 11	 1	 269.576668	 -1	 0.000000	 6.502003
15	 11	 11	 0	 356.482269	 -1	 0.000000	 4.703799
16	 11	 11	 0	 320.031936	 -1	 0.000000	 12.026552
17	 11	 11	 0	 320.061321	 -1	 0.000000	 5.703142
18	 11	 11	 0	 292.685418	 -1	 0.000000	 5.077916
19	 11	 11	 0	 317.486160	 -1	 0.000000	 6.462711
20	 11	 11	 0	 308.423443	 -1	 0.000000	 6.442965
21	 11	 11	 0	 412.318388	 -1	 0.000000	 4.658091
22	 11	 11	 0	 344.866183	 -1	 0.000000	 9.066752
23	 11	 11	 0	 344.564125	 -1	 0.000000	 6.357057
24	 11	 11	 0	 328.451792	 -1	 0.000000	 6.215558
25	 11	 11	 0	 365.432899	 -1	 0.000000	 6.561891
26	 11	 11	 0	 371.924195	 -1	 0.000000	 6.331971
27	 11	 11	 0	 285.217108	 -1	 0.000000	 4.339260
28	 11	 11	 1	 243.469200	 -1	 0.000000	 4.094899
29	 11	 11	 1	 288.885699	 -1	 0.000000	 7.630166
30	 11	 11	 0	 329.262003	 -1	 0.000000	 5.059793
31	 11	 11	 0	 419.927043	 -1	 0.000000	 8.091355
32	 11	 11	 0	 442.417491	 -1	 0.000000	 4.987453
33	 11	 11	 0	 348.592833	 -1	 0.000000	 5.503613
34	 11	 11	 0	 398.977546	 -1	 0.000000	 4.078220
35	 11	 11	 0	 380.132965	 -1	 0.000000	 7.800915
36	 11	 11	 0	 302.569735	 -1	 0.000000	 12.543770
37	 11	 11	 0	 316.970442	 -1	 0.000000	 10.202804
38	 11	 11	 0	 372.566521	 -1	 0.000000	 4.761302
39	 11	 11	 0	 419.557466	 -1	 0.000000	 5.003242
40	 11	 11	 0	 421.941246	 -1	 0.000000	 4.850171
41	 11	 11	 0	 437.277559	 -1	 0.000000	 4.196337
42	 11	 11	 0	 437.407762	 -1	 0.000000	 3.605084
43	 11	 11	 0	 420.824833	 -1	 0.000000	 5.096497
44	 11	 11	 0	 444.428827	 -1	 0.000000	 4.168979
45	 11	 11	 0	 423.430359	 -1	 0.000000	 5.546238
46	 11	 11	 0	 359.398191	 -1	 0.000000	 4.898154
47	 11	 11	 0	 389.196244	 -1	 0.000000	 8.410546
48	 11	 11	 0	 397.849741	 -1	 0.000000	 5.027230
49	 11	 11	 0	 362.189237	 -1	 0.000000	 12.900647
50	 11	 11	 0	 298.164814	 -1	 0.000000	 4.334850
51	 11	 11	 0	 246.110752	 -1	 0.000000	 7.946145
52	 11	 11	 0	 402.728619	 -1	 0.000000	 6.615437
53	 11	 11	 0	 370.780520	 -1	 0.000000	 11.887799
54	 11	 11	 0	 403.388607	 -1	 0.000000	 8.945797
55	 11	 11	 0	 395.133263	 -1	 0.000000	 10.605863
56	 11	 11	 0	 370.468094	 -1	 0.000000	 9.731629
57	 11	 11	 0	 339.657839	 -1	 0.000000	 6.972961
58	 11	 11	 0	 284.702017	 -1	 0.000000	 4.470584
59	 11	 11	 0	 369.366160	 -1	 0.000000	 4.186647
60	 11	 11	 0	 420.522465	 -1	 0.000000	 4.467539
61	 11	 11	 0	 334.479349	 -1	 0.000000	 7.484639
62	 11	 11	 0	 401.788738	 -1	 0.000000	 8.049292
63	 11	 11	 0	 370.724202	 -1	 0.000000	 4.987909
64	 11	 11	 0	 329.236119	 -1	 0.000000	 9.850320
65	 11	 11	 0	 426.401077	 -1	 0.000000	 5.257996
66	 11	 11	 0	 429.605161	 -1	 0.000000	 4.629320
67	 11	 11	 0	 330.828557	 -1	 0.000000	 17.656281
68	 11	 11	 0	 422.804630	 -1	 0.000000	 4.648559
69	 11	 11	 0	 439.457343	 -1	 0.000000	 4.061586
70	 11	 11	 0	 284.955135	 -1	 0.000000	 5.451007
71	 11	 11	 0	 432.595666	 -1	 0.000000	 6.341476
72	 11	 11	 0	 414.806346	 -1	 0.000000	 10.395622
73	 11	 11	 0	 284.650306	 -1	 0.000000	 11.285520
74	 11	 11	 0	 343.044800	 -1	 0.000000	 9.767000
75	 11	 11	 0	 424.511596	 -1	 0.000000	 4.355639
76	 11	 11	 0	 387.479779	 -1	 0.000000	 7.533617
77	 11	 11	 0	 421.846848	 -1	 0.000000	 5.458581
78	 11	 11	 0	 272.309058	 -1	 0.000000	 7.906034
79	 11	 11	 0	 387.994571	 -1	 0.000000	 5.506677
80	 11	 11	 0	 423.391641	 -1	 0.000000	 6.351492
81	 11	 11	 0	 308.257531	 -1	 0.000000	 5.863176
82	 11	 11	 0	 372.359595	 -1	 0.000000	 2.786005
83	 11	 11	 0	 351.560895	 -1	 0.000000	 8.249639
84	 11	 11	 0	 394.330126	 -1	 0.000000	 12.744883
85	 11	 11	 0	 349.200156	 -1	 0.000000	 6.443931
86	 11	 11	 0	 439.503740	 -1	 0.000000	 7.991453
87	 11	 11	 0	 392.045758	 -1	 0.000000	 4.937618
88	 11	 11	 0	 414.423094	 -1	 0.000000	 6.696313
89	 11	 11	 0	 421.869134	 -1	 0.000000	 4.646372
90	 11	 11	 0	 279.236675	 -1	 0.000000	 6.300125
91	 11	 11	 0	 444.613219	 -1	 0.000000	 4.443299
92	 11	 11	 0	 360.377166	 -1	 0.000000	 10.159943
93	 11	 11	 0	 402.975416	 -1	 0.000000	 5.947288
94	 11	 11	 0	 392.691808	 -1	 0.000000	 6.245070
95	 11	 11	 0	 289.710830	 -1	 0.000000	 6.437808
96	 11	 11	 0	 442.509360	 -1	 0.000000	 5.351504
97	 11	 11	 0	 309.631199	 -1	 0.000000	 7.266025
98	 11	 11	 0	 428.804503	 -1	 0.000000	 5.795647
99	 11	 11	 0	 319.552152	 -1	 0.000000	 8.031284
100	 11	 11	 0	 428.520293	 -1	 0.000000	 6.253747
101	 11	 11	 0	 287.898080	 -1	 0.000000	 5.969847
102	 11	 11	 0	 318.383185	 -1	 0.000000	 6.860750
103	 11	 11	 0	 433.793029	 -1	 0.000000	 5.941310
104	 11	 11	 0	 431.351663	 -1	 0.000000	 5.355846
105	 11	 11	 0	 384.330291	 -1	 0.000000	 4.315498
106	 11	 11	 0	 377.037159	 -1	 0.000000	 6.123576
107	 11	 11	 0	 411.244296	 -1	 0.000000	 4.747486
108	 11	 11	 0	 401.154301	 -1	 0.000000	 10.568223
109	 11	 11	 0	 322.839649	 -1	 0.000000	 5.342096
110	 11	 11	 0	 397.336194	 -1	 0.000000	 7.549495
111	 11	 11	 0	 442.452877	 -1	 0.000000	 7.772424
112	 11	 11	 0	 360.360923	 -1	 0.000000	 4.661071
113	 11	 11	 0	 418.395007	 -1	 0.000000	 3.452599
114	 11	 11	 0	 414.716620	 -1	 0.000000	 8.757912
115	 11	 11	 0	 217.810897	 -1	 0.000000	 3.890854
116	 11	 11	 0	 347.262775	 -1	 0.000000	 3.496782
117	 11	 11	 0	 412.354681	 -1	 0.000000	 11.593377
118	 11	 11	 0	 262.317368	 -1	 0.000000	 4.720774
119	 11	 11	 0	 322.094191	 -1	 0.000000	 3.880166
120	 11	 11	 0	 393.994658	 -1	 0.000000	 6.430108
121	 11	 11	 0	 285.902680	 -1	 0.000000	 8.913616
122	 11	 11	 0	 276.578913	 -1	 0.000000	 5.765012
123	 11	 11	 0	 404.093721	 -1	 0.000000	 4.717338
124	 11	 11	 0	 349.169876	 -1	 0.000000	 6.329616
125	 11	 11	 0	 393.078356	 -1	 0.000000	 8.344971
126	 11	 11	 0	 425.371112	 -1	 0.000000	 6.075350
127	 11	 11	 0	 308.994137	 -1	 0.000000	 5.591340
128	 11	 11	 1	 277.925753	 -1	 0.000000	 3.252618
129	 11	 11	 0	 451.776108	 -1	 0.000000	 4.933506
130	 11	 11	 0	 358.441903	 -1	 0.000000	 7.215703
131	 11	 11	 0	 386.320770	 -1	 0.000000	 4.197180
132	 11	 11	 0	 355.893855	 -1	 0.000000	 7.232248
133	 11	 11	 0	 410.057143	 -1	 0.000000	 5.243954
134	 11	 11	 0	 366.895654	 -1	 0.000000	 4.227407
135	 11	 11	 0	 428.811984	 -1	 0.000000	 6.812275
136	 11	 11	 0	 376.607884	 -1	 0.000000	 3.829383
137	 11	 11	 0	 277.693942	 -1	 0.000000	 7.804823
138	 11	 11	 0	 415.199351	 -1	 0.000000	 5.688088
139	 11	 11	 0	 409.080529	 -1	 0.000000	 5.057353
140	 11	 11	 0	 365.611284	 -1	 0.000000	 6.881396
141	 11	 11	 0	 392.699595	 -1	 0.000000	 5.111827
142	 11	 11	 0	 286.650965	 -1	 0.000000	 8.841693
143	 11	 11	 0	 378.808194	 -1	 0.000000	 6.458967
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
