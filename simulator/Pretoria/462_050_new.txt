>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 13	 13	 1	 0.030215	 -1	 0.000000	 6.482345
1	 13	 13	 1	 0.000656	 -1	 0.000000	 4.285689
2	 13	 13	 1	 0.060781	 -1	 0.000000	 5.630952
3	 13	 13	 1	 0.006858	 -1	 0.000000	 9.039351
4	 13	 13	 1	 0.009243	 -1	 0.000000	 4.336008
5	 13	 13	 1	 0.002230	 -1	 0.000000	 6.980003
6	 13	 13	 1	 0.023755	 -1	 0.000000	 7.789069
7	 13	 13	 1	 0.011278	 -1	 0.000000	 5.477330
8	 13	 13	 1	 0.145151	 -1	 0.000000	 6.721800
9	 13	 13	 1	 0.209543	 -1	 0.000000	 3.802653
10	 13	 13	 1	 0.132717	 -1	 0.000000	 8.136981
11	 13	 13	 1	 0.155752	 -1	 0.000000	 4.989203
12	 13	 13	 1	 0.002575	 -1	 0.000000	 5.276568
13	 13	 13	 1	 0.012822	 -1	 0.000000	 6.465716
14	 13	 13	 1	 0.000920	 -1	 0.000000	 9.052123
15	 13	 13	 1	 0.127603	 -1	 0.000000	 5.663684
16	 13	 13	 1	 0.079176	 -1	 0.000000	 12.104348
17	 13	 13	 1	 0.001504	 -1	 0.000000	 11.078561
18	 13	 13	 1	 0.000514	 -1	 0.000000	 6.591155
19	 13	 13	 1	 0.000861	 -1	 0.000000	 6.262789
20	 13	 13	 1	 0.000528	 -1	 0.000000	 6.064021
21	 13	 13	 1	 0.001654	 -1	 0.000000	 5.873947
22	 13	 13	 1	 0.066500	 -1	 0.000000	 4.146724
23	 13	 13	 1	 0.002194	 -1	 0.000000	 9.322677
24	 13	 13	 1	 0.451086	 -1	 0.000000	 10.882828
25	 13	 13	 1	 0.009339	 -1	 0.000000	 6.202209
26	 13	 13	 1	 0.001799	 -1	 0.000000	 7.514474
27	 13	 13	 1	 0.830564	 -1	 0.000000	 5.359407
28	 13	 13	 1	 0.125658	 -1	 0.000000	 5.642338
29	 13	 13	 1	 0.059739	 -1	 0.000000	 5.756930
30	 13	 13	 1	 0.081299	 -1	 0.000000	 6.356261
31	 13	 13	 1	 0.544323	 -1	 0.000000	 5.188499
32	 13	 13	 1	 0.005705	 -1	 0.000000	 6.297746
33	 13	 13	 1	 0.097685	 -1	 0.000000	 2.673807
34	 13	 13	 1	 0.000728	 -1	 0.000000	 7.113429
35	 13	 13	 1	 0.004796	 -1	 0.000000	 8.501224
36	 13	 13	 1	 0.011347	 -1	 0.000000	 4.469779
37	 13	 13	 1	 0.080401	 -1	 0.000000	 5.092553
38	 13	 13	 1	 0.271712	 -1	 0.000000	 8.792048
39	 13	 13	 1	 0.053757	 -1	 0.000000	 8.646933
40	 13	 13	 1	 0.058533	 -1	 0.000000	 4.993880
41	 13	 13	 1	 0.025287	 -1	 0.000000	 12.839653
42	 13	 13	 1	 0.000401	 -1	 0.000000	 6.485477
43	 13	 13	 1	 0.072714	 -1	 0.000000	 4.215771
44	 13	 13	 1	 0.060564	 -1	 0.000000	 4.060089
45	 13	 13	 1	 0.008419	 -1	 0.000000	 4.703133
46	 13	 13	 1	 0.015415	 -1	 0.000000	 5.438690
47	 13	 13	 1	 0.001565	 -1	 0.000000	 7.668526
48	 13	 13	 1	 0.004027	 -1	 0.000000	 12.495358
49	 13	 13	 1	 0.055497	 -1	 0.000000	 5.463390
50	 13	 13	 1	 0.018664	 -1	 0.000000	 5.987542
51	 13	 13	 1	 0.055900	 -1	 0.000000	 7.494583
52	 13	 13	 1	 0.030006	 -1	 0.000000	 6.712945
53	 13	 13	 1	 0.864977	 -1	 0.000000	 6.391007
54	 13	 13	 1	 0.073213	 -1	 0.000000	 7.511132
55	 13	 13	 1	 0.050202	 -1	 0.000000	 4.841291
56	 13	 13	 1	 0.027505	 -1	 0.000000	 9.189118
57	 13	 13	 1	 0.122599	 -1	 0.000000	 5.789334
58	 13	 13	 1	 0.062096	 -1	 0.000000	 6.420627
59	 13	 13	 1	 0.016238	 -1	 0.000000	 5.121856
60	 13	 13	 1	 0.120892	 -1	 0.000000	 8.426263
61	 13	 13	 1	 0.869707	 -1	 0.000000	 4.287127
62	 13	 13	 1	 0.795608	 -1	 0.000000	 9.044334
63	 13	 13	 1	 0.731202	 -1	 0.000000	 6.117480
64	 13	 13	 1	 0.020849	 -1	 0.000000	 4.649908
65	 13	 13	 1	 0.072268	 -1	 0.000000	 9.358329
66	 13	 13	 1	 1.174885	 -1	 0.000000	 5.986987
67	 13	 13	 1	 0.192470	 -1	 0.000000	 5.942383
68	 13	 13	 1	 0.022345	 -1	 0.000000	 5.690261
69	 13	 13	 1	 0.030572	 -1	 0.000000	 8.956109
70	 13	 13	 1	 0.000768	 -1	 0.000000	 6.179627
71	 13	 13	 1	 0.984070	 -1	 0.000000	 10.104571
72	 13	 13	 1	 0.082515	 -1	 0.000000	 7.964592
73	 13	 13	 1	 0.864188	 -1	 0.000000	 5.065198
74	 13	 13	 1	 0.053762	 -1	 0.000000	 15.077656
75	 13	 13	 1	 0.213646	 -1	 0.000000	 6.087682
76	 13	 13	 1	 0.009523	 -1	 0.000000	 5.466841
77	 13	 13	 1	 0.027554	 -1	 0.000000	 5.897478
78	 13	 13	 1	 0.009453	 -1	 0.000000	 7.276165
79	 13	 13	 1	 0.166366	 -1	 0.000000	 4.071286
80	 13	 13	 1	 0.010944	 -1	 0.000000	 11.991440
81	 13	 13	 1	 0.571581	 -1	 0.000000	 6.050810
82	 13	 13	 1	 0.004894	 -1	 0.000000	 3.094260
83	 13	 13	 1	 0.230883	 -1	 0.000000	 4.367600
84	 13	 13	 1	 0.078208	 -1	 0.000000	 6.584982
85	 13	 13	 1	 0.522539	 -1	 0.000000	 11.328830
86	 13	 13	 1	 0.011688	 -1	 0.000000	 6.936725
87	 13	 13	 1	 0.074812	 -1	 0.000000	 13.711300
88	 13	 13	 1	 0.109436	 -1	 0.000000	 7.776362
89	 13	 13	 1	 0.024483	 -1	 0.000000	 5.548455
90	 13	 13	 1	 0.016690	 -1	 0.000000	 6.018366
91	 13	 13	 1	 0.017165	 -1	 0.000000	 4.545656
92	 13	 13	 1	 0.032647	 -1	 0.000000	 4.220937
93	 13	 13	 1	 0.068095	 -1	 0.000000	 7.377619
94	 13	 13	 1	 0.202206	 -1	 0.000000	 4.481355
95	 13	 13	 1	 0.135283	 -1	 0.000000	 3.698714
96	 13	 13	 1	 0.086948	 -1	 0.000000	 5.689122
97	 13	 13	 1	 0.008741	 -1	 0.000000	 4.824330
98	 13	 13	 1	 0.009076	 -1	 0.000000	 5.073362
99	 13	 13	 1	 0.020617	 -1	 0.000000	 5.497084
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
11	 5	 5	 1	 18.170698	 -1	 0.000000	 5.127933
12	 5	 5	 1	 17.416789	 -1	 0.000000	 3.778839
13	 5	 5	 1	 19.712331	 -1	 0.000000	 3.744670
14	 5	 5	 1	 12.716228	 -1	 0.000000	 5.235548
15	 5	 5	 1	 14.123298	 -1	 0.000000	 6.483694
16	 5	 5	 1	 5.687137	 -1	 0.000000	 3.687850
17	 5	 5	 1	 16.835643	 -1	 0.000000	 5.920297
18	 5	 5	 1	 13.099337	 -1	 0.000000	 4.527515
19	 5	 5	 1	 15.402342	 -1	 0.000000	 5.670385
20	 5	 5	 1	 9.035359	 -1	 0.000000	 6.232733
21	 5	 5	 1	 8.122422	 -1	 0.000000	 7.179573
22	 5	 5	 1	 13.351893	 -1	 0.000000	 6.124485
23	 5	 5	 1	 15.775350	 -1	 0.000000	 3.652022
24	 5	 5	 1	 3.115313	 -1	 0.000000	 7.251645
25	 5	 5	 1	 18.675089	 -1	 0.000000	 3.672944
26	 5	 5	 1	 49.198642	 -1	 0.000000	 4.993581
27	 5	 5	 1	 31.374935	 -1	 0.000000	 3.957012
28	 5	 5	 1	 26.656346	 -1	 0.000000	 6.840493
29	 5	 5	 1	 13.052571	 -1	 0.000000	 4.472107
30	 5	 5	 1	 9.821365	 -1	 0.000000	 10.141131
31	 5	 5	 1	 7.205842	 -1	 0.000000	 12.071850
32	 5	 5	 1	 69.103348	 -1	 0.000000	 3.276904
33	 5	 5	 1	 9.411569	 -1	 0.000000	 5.702828
34	 5	 5	 1	 25.969012	 -1	 0.000000	 4.319855
35	 5	 5	 1	 18.198122	 -1	 0.000000	 6.375731
36	 5	 5	 1	 18.416799	 -1	 0.000000	 5.879440
37	 5	 5	 1	 45.634451	 -1	 0.000000	 4.435869
38	 5	 5	 1	 15.586126	 -1	 0.000000	 4.967890
39	 5	 5	 1	 15.785351	 -1	 0.000000	 4.079708
40	 5	 5	 1	 22.425071	 -1	 0.000000	 8.329591
41	 5	 5	 1	 21.892471	 -1	 0.000000	 6.103911
42	 5	 5	 1	 21.734525	 -1	 0.000000	 5.192984
43	 5	 5	 1	 13.668138	 -1	 0.000000	 4.663709
44	 5	 5	 1	 22.563348	 -1	 0.000000	 5.515592
45	 5	 5	 1	 17.553155	 -1	 0.000000	 8.023542
46	 5	 5	 1	 5.748440	 -1	 0.000000	 10.512694
47	 5	 5	 1	 105.643415	 -1	 0.000000	 9.799456
48	 5	 5	 1	 18.758624	 -1	 0.000000	 6.404097
49	 5	 5	 1	 13.541530	 -1	 0.000000	 15.043264
50	 5	 5	 1	 21.836013	 -1	 0.000000	 8.229086
51	 5	 5	 1	 19.329097	 -1	 0.000000	 9.506731
52	 5	 5	 1	 18.756625	 -1	 0.000000	 8.700116
53	 5	 5	 1	 20.576409	 -1	 0.000000	 5.652857
54	 5	 5	 1	 15.329184	 -1	 0.000000	 7.986877
55	 5	 5	 1	 61.689161	 -1	 0.000000	 9.124875
56	 5	 5	 1	 46.765347	 -1	 0.000000	 7.040465
57	 5	 5	 1	 103.137248	 -1	 0.000000	 4.961981
58	 5	 5	 1	 19.838577	 -1	 0.000000	 4.695137
59	 5	 5	 1	 13.109554	 -1	 0.000000	 5.552036
60	 5	 5	 1	 35.008430	 -1	 0.000000	 7.285571
61	 5	 5	 1	 5.719685	 -1	 0.000000	 7.744324
62	 5	 5	 1	 14.987617	 -1	 0.000000	 7.956732
63	 5	 5	 1	 14.761971	 -1	 0.000000	 7.830328
64	 5	 5	 1	 13.004800	 -1	 0.000000	 3.843402
65	 5	 5	 1	 16.579958	 -1	 0.000000	 4.439422
66	 5	 5	 1	 15.557807	 -1	 0.000000	 6.310234
67	 5	 5	 1	 18.397514	 -1	 0.000000	 6.177343
68	 5	 5	 1	 15.843988	 -1	 0.000000	 7.541366
69	 5	 5	 1	 13.446701	 -1	 0.000000	 4.551346
70	 5	 5	 1	 24.971177	 -1	 0.000000	 13.037615
71	 5	 5	 1	 8.213497	 -1	 0.000000	 4.444412
72	 5	 5	 1	 19.860477	 -1	 0.000000	 6.245030
73	 5	 5	 1	 19.886400	 -1	 0.000000	 8.257251
74	 5	 5	 1	 7.057148	 -1	 0.000000	 6.605707
75	 5	 5	 1	 12.000157	 -1	 0.000000	 6.222692
76	 5	 5	 1	 59.741059	 -1	 0.000000	 4.760088
77	 5	 5	 1	 121.013243	 -1	 0.000000	 7.116390
78	 5	 5	 1	 15.887717	 -1	 0.000000	 12.436054
79	 5	 5	 1	 19.090454	 -1	 0.000000	 6.828152
80	 5	 5	 1	 22.082511	 -1	 0.000000	 6.199746
81	 5	 5	 1	 12.369042	 -1	 0.000000	 7.235803
82	 5	 5	 1	 22.650354	 -1	 0.000000	 5.271063
83	 5	 5	 1	 16.313166	 -1	 0.000000	 6.145486
84	 5	 5	 1	 12.042343	 -1	 0.000000	 6.584217
85	 5	 5	 1	 19.648778	 -1	 0.000000	 4.863667
86	 5	 5	 1	 14.169853	 -1	 0.000000	 13.474251
87	 5	 5	 1	 13.622634	 -1	 0.000000	 8.312930
88	 5	 5	 1	 17.334182	 -1	 0.000000	 5.479214
89	 5	 5	 1	 13.589980	 -1	 0.000000	 5.679037
90	 5	 5	 1	 20.200291	 -1	 0.000000	 7.055448
91	 5	 5	 1	 11.265312	 -1	 0.000000	 6.553618
92	 5	 5	 1	 5.326594	 -1	 0.000000	 8.355424
93	 5	 5	 1	 17.286490	 -1	 0.000000	 8.273138
94	 5	 5	 1	 27.748140	 -1	 0.000000	 6.954991
95	 5	 5	 1	 9.858798	 -1	 0.000000	 8.971437
96	 5	 5	 1	 13.609826	 -1	 0.000000	 5.427399
97	 5	 5	 1	 7.346539	 -1	 0.000000	 4.562962
98	 5	 5	 1	 16.324748	 -1	 0.000000	 7.270536
99	 5	 5	 1	 9.808884	 -1	 0.000000	 6.255422
100	 5	 5	 1	 20.380856	 -1	 0.000000	 8.249533
101	 5	 5	 1	 13.897849	 -1	 0.000000	 5.449990
102	 5	 5	 1	 19.370153	 -1	 0.000000	 3.168393
103	 5	 5	 1	 23.380917	 -1	 0.000000	 3.106241
104	 5	 5	 1	 14.238626	 -1	 0.000000	 7.396528
105	 5	 5	 1	 25.185230	 -1	 0.000000	 8.737082
106	 5	 5	 1	 8.580533	 -1	 0.000000	 11.340808
107	 5	 5	 1	 18.978645	 -1	 0.000000	 10.184892
108	 5	 5	 1	 12.104377	 -1	 0.000000	 5.183087
109	 5	 5	 1	 79.461999	 -1	 0.000000	 4.745506
110	 5	 5	 1	 16.886697	 -1	 0.000000	 6.685271
111	 5	 5	 1	 23.483455	 -1	 0.000000	 4.254812
112	 5	 5	 1	 12.453660	 -1	 0.000000	 5.260291
113	 5	 5	 1	 8.685666	 -1	 0.000000	 7.058298
114	 5	 5	 1	 21.481523	 -1	 0.000000	 5.614799
115	 5	 5	 1	 31.987741	 -1	 0.000000	 3.702587
116	 5	 5	 1	 16.005174	 -1	 0.000000	 6.121024
117	 5	 5	 1	 12.369799	 -1	 0.000000	 12.610209
118	 5	 5	 1	 17.587139	 -1	 0.000000	 4.952770
119	 5	 5	 1	 17.541030	 -1	 0.000000	 3.896247
120	 5	 5	 1	 10.426491	 -1	 0.000000	 7.484241
121	 5	 5	 1	 11.402975	 -1	 0.000000	 11.271389
122	 5	 5	 1	 52.583015	 -1	 0.000000	 8.253524
123	 5	 5	 1	 11.855181	 -1	 0.000000	 3.977994
124	 5	 5	 1	 17.956270	 -1	 0.000000	 6.268783
125	 5	 5	 1	 7.499840	 -1	 0.000000	 5.779266
126	 5	 5	 1	 22.718929	 -1	 0.000000	 9.910323
127	 5	 5	 1	 41.587004	 -1	 0.000000	 4.491489
128	 5	 5	 1	 23.020309	 -1	 0.000000	 6.468784
129	 5	 5	 1	 12.381284	 -1	 0.000000	 4.964821
130	 5	 5	 1	 20.348861	 -1	 0.000000	 4.297779
131	 5	 5	 1	 18.941468	 -1	 0.000000	 4.134725
132	 5	 5	 1	 10.763614	 -1	 0.000000	 5.162970
133	 5	 5	 1	 24.431818	 -1	 0.000000	 12.075405
134	 5	 5	 1	 23.884076	 -1	 0.000000	 5.129470
135	 5	 5	 1	 16.443688	 -1	 0.000000	 4.905842
136	 5	 5	 1	 23.898407	 -1	 0.000000	 3.917748
137	 5	 5	 1	 12.086728	 -1	 0.000000	 3.733488
138	 5	 5	 1	 21.678557	 -1	 0.000000	 7.252318
139	 5	 5	 1	 17.044033	 -1	 0.000000	 8.088867
140	 5	 5	 1	 24.724463	 -1	 0.000000	 6.619625
141	 5	 5	 1	 17.216856	 -1	 0.000000	 8.096537
142	 5	 5	 1	 9.725414	 -1	 0.000000	 5.170619
143	 5	 5	 1	 15.990185	 -1	 0.000000	 4.052054
144	 5	 5	 1	 10.193887	 -1	 0.000000	 7.724622
145	 5	 5	 1	 4.489895	 -1	 0.000000	 5.477690
146	 5	 5	 1	 7.277113	 -1	 0.000000	 6.657270
147	 5	 5	 0	 128.833623	 -1	 0.000000	 5.908661
148	 5	 5	 1	 16.411966	 -1	 0.000000	 8.289225
149	 5	 5	 1	 10.122825	 -1	 0.000000	 7.147539
150	 5	 5	 1	 22.584347	 -1	 0.000000	 8.360514
151	 5	 5	 1	 19.623567	 -1	 0.000000	 4.287800
152	 5	 5	 1	 29.461395	 -1	 0.000000	 4.269518
153	 5	 5	 1	 12.854281	 -1	 0.000000	 4.774686
154	 5	 5	 1	 35.624791	 -1	 0.000000	 5.486453
155	 5	 5	 1	 12.116169	 -1	 0.000000	 6.831719
156	 5	 5	 1	 14.141008	 -1	 0.000000	 9.264591
157	 5	 5	 1	 25.955798	 -1	 0.000000	 5.084077
158	 5	 5	 1	 30.567252	 -1	 0.000000	 5.701335
159	 5	 5	 1	 40.811230	 -1	 0.000000	 5.410817
160	 5	 5	 1	 19.586712	 -1	 0.000000	 3.879410
161	 5	 5	 1	 3.738714	 -1	 0.000000	 6.138955
162	 5	 5	 1	 16.191368	 -1	 0.000000	 3.094644
163	 5	 5	 1	 6.120084	 -1	 0.000000	 6.380313
164	 5	 5	 1	 28.043201	 -1	 0.000000	 5.205220
165	 5	 5	 1	 20.689864	 -1	 0.000000	 4.795241
166	 5	 5	 1	 18.599050	 -1	 0.000000	 5.359250
167	 5	 5	 1	 19.250362	 -1	 0.000000	 3.390656
168	 5	 5	 1	 13.715678	 -1	 0.000000	 4.933869
169	 5	 5	 1	 42.667840	 -1	 0.000000	 5.834743
170	 5	 5	 1	 27.912228	 -1	 0.000000	 4.580929
171	 5	 5	 1	 16.736848	 -1	 0.000000	 4.663646
172	 5	 5	 1	 95.897606	 -1	 0.000000	 3.850894
173	 5	 5	 1	 22.698638	 -1	 0.000000	 5.031047
174	 5	 5	 1	 17.094769	 -1	 0.000000	 3.862857
178	 5	 5	 1	 20.448070	 -1	 0.000000	 7.899378
192	 5	 5	 1	 21.070423	 -1	 0.000000	 6.816489
201	 5	 5	 1	 8.588424	 -1	 0.000000	 5.848157
202	 5	 5	 1	 26.996706	 -1	 0.000000	 10.430252
209	 5	 5	 1	 13.415907	 -1	 0.000000	 5.903490
232	 5	 5	 1	 26.248935	 -1	 0.000000	 5.149408
247	 5	 5	 1	 50.678427	 -1	 0.000000	 11.246078
251	 5	 5	 0	 1000.000000	 -1	 0.000000	 4.663443
256	 5	 5	 1	 20.230936	 -1	 0.000000	 12.715824
266	 5	 5	 0	 1000.000000	 -1	 0.000000	 5.879787
275	 5	 5	 1	 9.214296	 -1	 0.000000	 8.670769
284	 5	 5	 1	 16.074611	 -1	 0.000000	 11.433842
287	 5	 5	 1	 11.345610	 -1	 0.000000	 5.033570
313	 5	 5	 1	 18.172895	 -1	 0.000000	 6.054996
326	 5	 5	 1	 14.299581	 -1	 0.000000	 5.072356
334	 5	 5	 1	 10.500435	 -1	 0.000000	 7.127921
341	 5	 5	 1	 15.082806	 -1	 0.000000	 4.904522
357	 5	 5	 1	 10.445018	 -1	 0.000000	 5.603907
363	 5	 5	 1	 28.110721	 -1	 0.000000	 4.071502
367	 5	 5	 1	 14.425052	 -1	 0.000000	 3.813019
371	 5	 5	 1	 18.533034	 -1	 0.000000	 3.782460
392	 5	 5	 0	 494.249658	 -1	 0.000000	 4.183724
396	 5	 5	 1	 21.942419	 -1	 0.000000	 11.013980
402	 5	 5	 1	 19.212686	 -1	 0.000000	 14.745342
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
34	 9	 9	 0	 343.926575	 -1	 0.000000	 7.690696
35	 9	 9	 0	 304.004741	 -1	 0.000000	 7.748580
36	 9	 9	 0	 402.783525	 -1	 0.000000	 6.984093
37	 9	 9	 0	 414.911323	 -1	 0.000000	 4.010331
38	 9	 9	 0	 415.652317	 -1	 0.000000	 4.841095
39	 9	 9	 0	 433.947171	 -1	 0.000000	 9.792588
40	 9	 9	 0	 396.748695	 -1	 0.000000	 10.839950
41	 9	 9	 0	 420.389465	 -1	 0.000000	 6.620467
42	 9	 9	 0	 443.708657	 -1	 0.000000	 8.257248
43	 9	 9	 0	 430.319133	 -1	 0.000000	 6.662969
44	 9	 9	 0	 370.889890	 -1	 0.000000	 5.468012
45	 9	 9	 0	 449.483605	 -1	 0.000000	 4.550076
46	 9	 9	 0	 380.673262	 -1	 0.000000	 9.698224
47	 9	 9	 0	 410.468124	 -1	 0.000000	 5.648183
48	 9	 9	 0	 376.620600	 -1	 0.000000	 7.244363
49	 9	 9	 0	 413.944544	 -1	 0.000000	 6.748686
50	 9	 9	 0	 410.781968	 -1	 0.000000	 9.213447
51	 9	 9	 0	 426.990355	 -1	 0.000000	 4.875360
52	 9	 9	 0	 446.429780	 -1	 0.000000	 6.871129
53	 9	 9	 0	 299.063654	 -1	 0.000000	 5.640131
54	 9	 9	 0	 331.533162	 -1	 0.000000	 9.233964
55	 9	 9	 0	 436.479541	 -1	 0.000000	 7.752394
56	 9	 9	 0	 368.792694	 -1	 0.000000	 9.960330
57	 9	 9	 0	 430.570760	 -1	 0.000000	 8.709423
58	 9	 9	 0	 431.853121	 -1	 0.000000	 5.104208
59	 9	 9	 0	 423.220378	 -1	 0.000000	 10.330717
60	 9	 9	 0	 418.780431	 -1	 0.000000	 4.704491
61	 9	 9	 0	 435.104330	 -1	 0.000000	 5.247238
62	 9	 9	 0	 428.058845	 -1	 0.000000	 6.624906
63	 9	 9	 0	 355.625993	 -1	 0.000000	 5.144177
64	 9	 9	 0	 410.235631	 -1	 0.000000	 7.018842
65	 9	 9	 0	 430.042375	 -1	 0.000000	 2.855926
66	 9	 9	 0	 433.677463	 -1	 0.000000	 5.170527
67	 9	 9	 0	 427.159277	 -1	 0.000000	 7.220676
68	 9	 9	 0	 376.038994	 -1	 0.000000	 6.639378
69	 9	 9	 0	 420.594314	 -1	 0.000000	 8.537383
70	 9	 9	 0	 431.406158	 -1	 0.000000	 5.858809
71	 9	 9	 0	 424.722377	 -1	 0.000000	 4.759314
72	 9	 9	 0	 438.171507	 -1	 0.000000	 6.229114
73	 9	 9	 0	 430.284253	 -1	 0.000000	 10.240950
74	 9	 9	 0	 433.552904	 -1	 0.000000	 4.713088
75	 9	 9	 0	 401.718602	 -1	 0.000000	 5.792276
76	 9	 9	 0	 442.536591	 -1	 0.000000	 5.083659
77	 9	 9	 0	 404.295613	 -1	 0.000000	 7.341545
78	 9	 9	 0	 427.852981	 -1	 0.000000	 5.792379
79	 9	 9	 0	 348.184254	 -1	 0.000000	 15.267158
80	 9	 9	 0	 435.453503	 -1	 0.000000	 8.911407
81	 9	 9	 0	 351.066746	 -1	 0.000000	 6.594540
82	 9	 9	 0	 410.850223	 -1	 0.000000	 7.232507
83	 9	 9	 0	 418.464980	 -1	 0.000000	 7.216093
84	 9	 9	 0	 353.651866	 -1	 0.000000	 5.337106
85	 9	 9	 0	 429.093796	 -1	 0.000000	 4.361738
86	 9	 9	 0	 448.680652	 -1	 0.000000	 5.089557
87	 9	 9	 0	 434.734073	 -1	 0.000000	 9.371735
88	 9	 9	 0	 397.545130	 -1	 0.000000	 6.328828
89	 9	 9	 0	 411.290506	 -1	 0.000000	 5.708160
90	 9	 9	 0	 429.754121	 -1	 0.000000	 5.486459
91	 9	 9	 0	 427.386256	 -1	 0.000000	 8.202220
92	 9	 9	 0	 381.384254	 -1	 0.000000	 9.643937
93	 9	 9	 0	 414.079938	 -1	 0.000000	 3.846998
94	 9	 9	 0	 405.074272	 -1	 0.000000	 7.934981
95	 9	 9	 0	 432.715012	 -1	 0.000000	 9.697057
96	 9	 9	 0	 404.492159	 -1	 0.000000	 2.876757
97	 9	 9	 0	 444.644343	 -1	 0.000000	 13.527676
98	 9	 9	 0	 438.086842	 -1	 0.000000	 8.224596
99	 9	 9	 0	 413.817980	 -1	 0.000000	 8.404108
100	 9	 9	 0	 403.453717	 -1	 0.000000	 6.129504
101	 9	 9	 0	 368.405346	 -1	 0.000000	 4.971419
102	 9	 9	 0	 415.604260	 -1	 0.000000	 4.902919
103	 9	 9	 0	 400.662976	 -1	 0.000000	 4.285075
104	 9	 9	 0	 376.020749	 -1	 0.000000	 5.844208
105	 9	 9	 0	 434.320422	 -1	 0.000000	 5.996894
106	 9	 9	 0	 412.130970	 -1	 0.000000	 4.704930
107	 9	 9	 0	 372.761657	 -1	 0.000000	 9.565829
108	 9	 9	 0	 350.140405	 -1	 0.000000	 5.970410
109	 9	 9	 0	 422.326753	 -1	 0.000000	 4.860974
110	 9	 9	 0	 407.342997	 -1	 0.000000	 4.445422
111	 9	 9	 0	 339.097325	 -1	 0.000000	 3.349199
112	 9	 9	 0	 439.420161	 -1	 0.000000	 6.250196
113	 9	 9	 0	 427.008137	 -1	 0.000000	 11.078076
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 11	 11	 0	 444.804270	 -1	 0.000000	 5.752630
1	 11	 11	 0	 444.130029	 -1	 0.000000	 6.335867
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 10	 10	 0	 466.458083	 -1	 0.000000	 3.989125
1	 10	 10	 0	 480.804670	 -1	 0.000000	 5.177585
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   17 items of size 3696. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
