>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 13	 13	 1	 0.070596	 -1	 0.000000	 4.897370
1	 13	 13	 1	 0.096107	 -1	 0.000000	 3.450711
2	 13	 13	 1	 1.973547	 -1	 0.000000	 6.035660
3	 13	 13	 1	 0.025536	 -1	 0.000000	 7.586758
4	 13	 13	 1	 0.307600	 -1	 0.000000	 11.156150
5	 13	 13	 1	 0.084412	 -1	 0.000000	 7.048598
6	 13	 13	 1	 0.037159	 -1	 0.000000	 4.343969
7	 13	 13	 1	 0.041301	 -1	 0.000000	 8.194412
8	 13	 13	 1	 0.019544	 -1	 0.000000	 4.406876
9	 13	 13	 1	 0.139075	 -1	 0.000000	 8.749514
10	 13	 13	 1	 0.171211	 -1	 0.000000	 3.105754
11	 13	 13	 1	 0.173311	 -1	 0.000000	 5.971002
12	 13	 13	 1	 0.132746	 -1	 0.000000	 5.132778
13	 13	 13	 1	 0.069860	 -1	 0.000000	 3.918825
14	 13	 13	 1	 0.030207	 -1	 0.000000	 4.095877
15	 13	 13	 1	 0.261397	 -1	 0.000000	 3.551766
16	 13	 13	 1	 0.020437	 -1	 0.000000	 5.235207
17	 13	 13	 1	 0.427355	 -1	 0.000000	 2.998203
18	 13	 13	 1	 0.045251	 -1	 0.000000	 8.005616
19	 13	 13	 1	 0.098908	 -1	 0.000000	 3.502903
20	 13	 13	 1	 0.158356	 -1	 0.000000	 3.333565
21	 13	 13	 1	 0.269417	 -1	 0.000000	 7.396173
22	 13	 13	 1	 0.028344	 -1	 0.000000	 3.710663
23	 13	 13	 1	 0.097593	 -1	 0.000000	 2.366578
24	 13	 13	 1	 0.175874	 -1	 0.000000	 7.671410
25	 13	 13	 1	 0.106038	 -1	 0.000000	 6.468715
26	 13	 13	 1	 1.004882	 -1	 0.000000	 7.839405
27	 13	 13	 1	 0.126545	 -1	 0.000000	 5.721168
28	 13	 13	 1	 0.154346	 -1	 0.000000	 13.047309
29	 13	 13	 1	 0.052844	 -1	 0.000000	 7.928107
30	 13	 13	 1	 3.262407	 -1	 0.000000	 2.205374
31	 13	 13	 1	 0.320556	 -1	 0.000000	 3.368836
32	 13	 13	 1	 1.506213	 -1	 0.000000	 9.533910
33	 13	 13	 1	 0.138046	 -1	 0.000000	 5.129585
34	 13	 13	 1	 0.010647	 -1	 0.000000	 5.646027
35	 13	 13	 1	 0.039241	 -1	 0.000000	 3.404208
36	 13	 13	 1	 0.048919	 -1	 0.000000	 3.809410
37	 13	 13	 1	 0.024149	 -1	 0.000000	 4.607051
38	 13	 13	 1	 1.038566	 -1	 0.000000	 7.567404
39	 13	 13	 1	 0.077566	 -1	 0.000000	 7.456544
40	 13	 13	 1	 0.303413	 -1	 0.000000	 8.292370
41	 13	 13	 1	 0.171563	 -1	 0.000000	 9.595109
42	 13	 13	 1	 0.366623	 -1	 0.000000	 4.862000
43	 13	 13	 1	 0.101699	 -1	 0.000000	 4.369669
44	 13	 13	 1	 0.059131	 -1	 0.000000	 6.588948
45	 13	 13	 1	 0.172312	 -1	 0.000000	 4.798672
46	 13	 13	 1	 0.059242	 -1	 0.000000	 7.635312
47	 13	 13	 1	 1.553407	 -1	 0.000000	 4.397337
48	 13	 13	 1	 1.006803	 -1	 0.000000	 6.247479
49	 13	 13	 1	 0.038277	 -1	 0.000000	 4.666553
50	 13	 13	 1	 0.358309	 -1	 0.000000	 3.897436
51	 13	 13	 1	 0.030979	 -1	 0.000000	 11.805440
52	 13	 13	 1	 0.019021	 -1	 0.000000	 4.796727
53	 13	 13	 1	 0.111457	 -1	 0.000000	 8.449505
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 15	 15	 1	 11.417767	 -1	 0.000000	 7.507316
1	 15	 15	 1	 5.025960	 -1	 0.000000	 5.186106
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 5	 5	 1	 35.555510	 -1	 0.000000	 2.929323
1	 5	 5	 1	 36.608584	 -1	 0.000000	 6.748247
2	 5	 5	 1	 25.806539	 -1	 0.000000	 3.698978
3	 5	 5	 1	 28.868898	 -1	 0.000000	 6.394425
4	 5	 5	 1	 22.271842	 -1	 0.000000	 5.273703
5	 5	 5	 1	 34.833965	 -1	 0.000000	 9.042858
6	 5	 5	 1	 20.704772	 -1	 0.000000	 5.446807
7	 5	 5	 1	 31.515108	 -1	 0.000000	 6.460252
8	 5	 5	 1	 39.376760	 -1	 0.000000	 3.422101
9	 5	 5	 1	 17.998290	 -1	 0.000000	 12.816767
10	 5	 5	 1	 41.185794	 -1	 0.000000	 8.145932
11	 5	 5	 1	 27.257535	 -1	 0.000000	 7.724254
12	 5	 5	 1	 32.336302	 -1	 0.000000	 6.399800
13	 5	 5	 1	 20.234780	 -1	 0.000000	 9.710354
14	 5	 5	 1	 28.630804	 -1	 0.000000	 2.718302
15	 5	 5	 1	 24.208243	 -1	 0.000000	 7.078294
16	 5	 5	 1	 37.635869	 -1	 0.000000	 3.812881
17	 5	 5	 1	 22.632567	 -1	 0.000000	 3.778426
18	 5	 5	 1	 26.277967	 -1	 0.000000	 3.151136
19	 5	 5	 1	 34.869535	 -1	 0.000000	 3.222775
20	 5	 5	 1	 83.014403	 -1	 0.000000	 7.441324
21	 5	 5	 1	 48.948119	 -1	 0.000000	 11.008208
22	 5	 5	 1	 62.919638	 -1	 0.000000	 6.577237
23	 5	 5	 1	 45.694860	 -1	 0.000000	 1.644063
24	 5	 5	 1	 43.423749	 -1	 0.000000	 5.642220
25	 5	 5	 1	 23.823619	 -1	 0.000000	 7.560705
26	 5	 5	 1	 37.777525	 -1	 0.000000	 5.548200
27	 5	 5	 1	 29.328097	 -1	 0.000000	 4.684912
28	 5	 5	 1	 35.606507	 -1	 0.000000	 3.216523
29	 5	 5	 1	 41.199007	 -1	 0.000000	 6.645152
30	 5	 5	 1	 33.334431	 -1	 0.000000	 5.402854
31	 5	 5	 1	 38.672789	 -1	 0.000000	 5.163251
32	 5	 5	 0	 371.527095	 -1	 0.000000	 4.379004
33	 5	 5	 0	 165.818987	 -1	 0.000000	 3.695858
34	 5	 5	 1	 59.681529	 -1	 0.000000	 4.114698
35	 5	 5	 1	 28.032824	 -1	 0.000000	 4.145509
36	 5	 5	 1	 35.312297	 -1	 0.000000	 2.430806
37	 5	 5	 1	 33.519379	 -1	 0.000000	 5.545454
38	 5	 5	 1	 18.009584	 -1	 0.000000	 5.398770
39	 5	 5	 1	 35.780182	 -1	 0.000000	 2.565576
40	 5	 5	 1	 28.526340	 -1	 0.000000	 7.393299
41	 5	 5	 1	 37.343066	 -1	 0.000000	 6.649204
42	 5	 5	 0	 162.143973	 -1	 0.000000	 6.221310
43	 5	 5	 1	 37.864139	 -1	 0.000000	 7.027517
44	 5	 5	 1	 30.659241	 -1	 0.000000	 3.718210
45	 5	 5	 1	 45.360229	 -1	 0.000000	 3.870457
46	 5	 5	 1	 51.516727	 -1	 0.000000	 2.735192
47	 5	 5	 1	 41.425132	 -1	 0.000000	 8.482102
48	 5	 5	 1	 28.489745	 -1	 0.000000	 4.686430
49	 5	 5	 1	 27.194999	 -1	 0.000000	 4.473904
50	 5	 5	 1	 26.556155	 -1	 0.000000	 3.825282
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 5	 5	 1	 30.973851	 -1	 0.000000	 3.007389
1	 5	 5	 1	 37.323493	 -1	 0.000000	 3.449081
2	 5	 5	 1	 108.946370	 -1	 0.000000	 8.227706
3	 5	 5	 1	 24.974130	 -1	 0.000000	 5.261572
4	 5	 5	 1	 27.143951	 -1	 0.000000	 3.789969
5	 5	 5	 1	 28.166916	 -1	 0.000000	 4.640258
6	 5	 5	 1	 22.379341	 -1	 0.000000	 7.040851
7	 5	 5	 1	 33.238294	 -1	 0.000000	 2.582395
8	 5	 5	 1	 23.280819	 -1	 0.000000	 10.871860
9	 5	 5	 1	 34.483322	 -1	 0.000000	 10.400068
10	 5	 5	 1	 27.613902	 -1	 0.000000	 5.836019
11	 5	 5	 1	 23.671710	 -1	 0.000000	 2.654751
12	 5	 5	 1	 20.667508	 -1	 0.000000	 4.777889
13	 5	 5	 1	 31.314157	 -1	 0.000000	 2.243307
14	 5	 5	 1	 33.687366	 -1	 0.000000	 7.546165
15	 5	 5	 1	 26.267786	 -1	 0.000000	 12.205010
16	 5	 5	 1	 27.000222	 -1	 0.000000	 5.721274
17	 5	 5	 1	 35.821878	 -1	 0.000000	 5.135762
18	 5	 5	 1	 16.288247	 -1	 0.000000	 5.443571
19	 5	 5	 0	 129.755189	 -1	 0.000000	 6.120744
20	 5	 5	 1	 52.602130	 -1	 0.000000	 2.760014
21	 5	 5	 1	 91.181950	 -1	 0.000000	 2.609140
22	 5	 5	 1	 50.382616	 -1	 0.000000	 5.949485
23	 5	 5	 1	 7.042105	 -1	 0.000000	 2.608575
24	 5	 5	 1	 45.402942	 -1	 0.000000	 2.610871
25	 5	 5	 1	 27.337451	 -1	 0.000000	 4.102800
26	 5	 5	 1	 24.812246	 -1	 0.000000	 4.731079
27	 5	 5	 1	 44.937155	 -1	 0.000000	 7.105768
28	 5	 5	 1	 34.269824	 -1	 0.000000	 3.383352
29	 5	 5	 1	 19.857246	 -1	 0.000000	 5.492662
30	 5	 5	 1	 13.360716	 -1	 0.000000	 4.004353
31	 5	 5	 0	 261.103582	 -1	 0.000000	 5.163653
32	 5	 5	 1	 15.406719	 -1	 0.000000	 5.737631
33	 5	 5	 1	 35.243890	 -1	 0.000000	 11.005201
34	 5	 5	 1	 37.013409	 -1	 0.000000	 4.769402
35	 5	 5	 1	 33.125111	 -1	 0.000000	 4.365088
36	 5	 5	 1	 21.270768	 -1	 0.000000	 4.872153
37	 5	 5	 1	 21.609504	 -1	 0.000000	 3.362472
38	 5	 5	 1	 40.672054	 -1	 0.000000	 3.826026
39	 5	 5	 1	 24.237922	 -1	 0.000000	 4.319488
40	 5	 5	 1	 39.027328	 -1	 0.000000	 5.098150
41	 5	 5	 1	 30.487850	 -1	 0.000000	 4.071332
42	 5	 5	 1	 22.528818	 -1	 0.000000	 8.033617
43	 5	 5	 1	 10.116355	 -1	 0.000000	 6.728270
44	 5	 5	 1	 11.625791	 -1	 0.000000	 6.018386
46	 5	 5	 1	 35.269133	 -1	 0.000000	 9.415174
47	 5	 5	 1	 31.266914	 -1	 0.000000	 7.376566
48	 5	 5	 1	 21.276396	 -1	 0.000000	 4.420453
49	 5	 5	 1	 42.091781	 -1	 0.000000	 3.854503
50	 5	 5	 1	 22.211726	 -1	 0.000000	 4.587096
51	 5	 5	 1	 31.279964	 -1	 0.000000	 2.395421
52	 5	 5	 1	 33.530191	 -1	 0.000000	 6.194003
53	 5	 5	 1	 34.528919	 -1	 0.000000	 8.229000
54	 5	 5	 1	 47.523100	 -1	 0.000000	 3.023792
55	 5	 5	 1	 30.597568	 -1	 0.000000	 2.975645
56	 5	 5	 1	 33.632200	 -1	 0.000000	 10.184546
57	 5	 5	 1	 45.408908	 -1	 0.000000	 8.600765
58	 5	 5	 1	 80.609808	 -1	 0.000000	 7.511347
59	 5	 5	 1	 31.913854	 -1	 0.000000	 2.458884
60	 5	 5	 1	 37.502406	 -1	 0.000000	 7.688337
61	 5	 5	 1	 17.747648	 -1	 0.000000	 12.524561
62	 5	 5	 1	 17.595212	 -1	 0.000000	 8.697596
63	 5	 5	 1	 33.116980	 -1	 0.000000	 3.458014
64	 5	 5	 1	 46.018793	 -1	 0.000000	 5.593605
65	 5	 5	 1	 31.262482	 -1	 0.000000	 2.439536
66	 5	 5	 1	 20.666485	 -1	 0.000000	 5.145851
67	 5	 5	 1	 64.105929	 -1	 0.000000	 4.567345
68	 5	 5	 1	 44.682013	 -1	 0.000000	 4.542935
69	 5	 5	 1	 42.265537	 -1	 0.000000	 5.999230
70	 5	 5	 1	 35.423377	 -1	 0.000000	 5.251632
71	 5	 5	 0	 210.428336	 -1	 0.000000	 2.705786
72	 5	 5	 1	 41.225930	 -1	 0.000000	 5.097179
73	 5	 5	 1	 30.965901	 -1	 0.000000	 3.455961
74	 5	 5	 1	 45.299315	 -1	 0.000000	 3.355104
75	 5	 5	 1	 37.236521	 -1	 0.000000	 5.429750
76	 5	 5	 1	 30.240720	 -1	 0.000000	 3.639622
77	 5	 5	 1	 34.380696	 -1	 0.000000	 4.166344
78	 5	 5	 1	 119.673617	 -1	 0.000000	 5.836460
79	 5	 5	 1	 29.949483	 -1	 0.000000	 14.388180
80	 5	 5	 1	 34.898495	 -1	 0.000000	 7.964729
81	 5	 5	 1	 34.516331	 -1	 0.000000	 10.280015
82	 5	 5	 1	 13.774638	 -1	 0.000000	 2.699706
83	 5	 5	 1	 83.904149	 -1	 0.000000	 2.360468
84	 5	 5	 1	 16.229053	 -1	 0.000000	 4.445361
85	 5	 5	 1	 36.012423	 -1	 0.000000	 9.913900
86	 5	 5	 1	 86.502082	 -1	 0.000000	 3.974239
87	 5	 5	 1	 39.265486	 -1	 0.000000	 3.078668
88	 5	 5	 1	 33.133015	 -1	 0.000000	 4.814048
89	 5	 5	 1	 32.661751	 -1	 0.000000	 8.678970
90	 5	 5	 1	 47.505113	 -1	 0.000000	 3.403015
91	 5	 5	 1	 12.561847	 -1	 0.000000	 5.419467
92	 5	 5	 1	 33.003048	 -1	 0.000000	 4.507600
93	 5	 5	 1	 38.348501	 -1	 0.000000	 4.939277
94	 5	 5	 1	 31.444161	 -1	 0.000000	 7.371273
95	 5	 5	 1	 3.637913	 -1	 0.000000	 6.083508
96	 5	 5	 1	 38.784297	 -1	 0.000000	 5.179625
97	 5	 5	 1	 33.038786	 -1	 0.000000	 3.600919
98	 5	 5	 1	 23.088748	 -1	 0.000000	 4.577881
99	 5	 5	 1	 28.745134	 -1	 0.000000	 3.821434
100	 5	 5	 1	 31.248924	 -1	 0.000000	 3.529366
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 7	 7	 1	 79.569526	 -1	 0.000000	 3.394155
1	 7	 7	 0	 109.013647	 -1	 0.000000	 4.513047
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 7	 7	 0	 100.912330	 -1	 0.000000	 4.621460
1	 7	 7	 1	 44.233751	 -1	 0.000000	 7.828835
2	 7	 7	 1	 46.362953	 -1	 0.000000	 4.548341
3	 7	 7	 0	 202.154668	 -1	 0.000000	 4.264762
4	 7	 7	 0	 71.704036	 -1	 0.000000	 5.961834
5	 7	 7	 1	 90.056935	 -1	 0.000000	 3.669767
6	 7	 7	 0	 195.572109	 -1	 0.000000	 2.629667
7	 7	 7	 1	 51.599532	 -1	 0.000000	 5.300591
8	 7	 7	 1	 46.937164	 -1	 0.000000	 3.525146
9	 7	 7	 1	 49.667949	 -1	 0.000000	 5.238565
10	 7	 7	 1	 55.064700	 -1	 0.000000	 5.274558
11	 7	 7	 0	 82.963938	 -1	 0.000000	 2.676332
12	 7	 7	 0	 82.072123	 -1	 0.000000	 5.417509
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 9	 9	 0	 404.218148	 -1	 0.000000	 7.060280
1	 9	 9	 0	 394.164223	 -1	 0.000000	 6.221915
2	 9	 9	 0	 427.797384	 -1	 0.000000	 4.418640
3	 9	 9	 0	 431.120811	 -1	 0.000000	 4.470969
4	 9	 9	 0	 394.405135	 -1	 0.000000	 9.190719
5	 9	 9	 0	 341.034129	 -1	 0.000000	 4.876902
6	 9	 9	 0	 377.251079	 -1	 0.000000	 3.657474
7	 9	 9	 0	 364.736340	 -1	 0.000000	 5.417754
8	 9	 9	 0	 447.544680	 -1	 0.000000	 6.871573
9	 9	 9	 0	 410.484334	 -1	 0.000000	 4.358037
10	 9	 9	 0	 393.635050	 -1	 0.000000	 10.380638
11	 9	 9	 0	 416.845459	 -1	 0.000000	 2.444621
12	 9	 9	 0	 450.633694	 -1	 0.000000	 9.003585
13	 9	 9	 1	 327.076329	 -1	 0.000000	 6.078921
14	 9	 9	 0	 424.629550	 -1	 0.000000	 8.074955
15	 9	 9	 0	 384.131602	 -1	 0.000000	 8.383463
16	 9	 9	 0	 397.652088	 -1	 0.000000	 4.235897
17	 9	 9	 0	 404.169540	 -1	 0.000000	 5.198297
18	 9	 9	 0	 389.747366	 -1	 0.000000	 4.272343
19	 9	 9	 0	 418.157767	 -1	 0.000000	 4.442388
20	 9	 9	 0	 410.692641	 -1	 0.000000	 6.211046
21	 9	 9	 0	 329.442379	 -1	 0.000000	 9.528868
22	 9	 9	 0	 421.878047	 -1	 0.000000	 6.473252
23	 9	 9	 0	 420.677940	 -1	 0.000000	 3.652716
24	 9	 9	 1	 334.533333	 -1	 0.000000	 10.706847
25	 9	 9	 0	 440.302008	 -1	 0.000000	 5.225665
26	 9	 9	 0	 415.087204	 -1	 0.000000	 5.241247
27	 9	 9	 0	 350.005027	 -1	 0.000000	 4.141330
28	 9	 9	 0	 382.907225	 -1	 0.000000	 3.410575
29	 9	 9	 1	 349.398755	 -1	 0.000000	 6.899135
30	 9	 9	 0	 386.965017	 -1	 0.000000	 4.011735
31	 9	 9	 0	 376.048865	 -1	 0.000000	 9.129922
32	 9	 9	 0	 366.383848	 -1	 0.000000	 3.224984
33	 9	 9	 0	 304.558319	 -1	 0.000000	 10.753273
34	 9	 9	 0	 400.607529	 -1	 0.000000	 6.285383
35	 9	 9	 0	 425.385060	 -1	 0.000000	 7.730782
36	 9	 9	 0	 361.844158	 -1	 0.000000	 2.188942
37	 9	 9	 0	 405.227576	 -1	 0.000000	 5.054136
38	 9	 9	 0	 434.638814	 -1	 0.000000	 2.708760
39	 9	 9	 0	 353.156674	 -1	 0.000000	 4.130944
40	 9	 9	 0	 401.398651	 -1	 0.000000	 14.689050
41	 9	 9	 0	 411.983714	 -1	 0.000000	 7.204437
42	 9	 9	 0	 414.450975	 -1	 0.000000	 8.909705
43	 9	 9	 0	 425.971311	 -1	 0.000000	 4.254327
44	 9	 9	 0	 431.634101	 -1	 0.000000	 5.890689
45	 9	 9	 0	 357.984198	 -1	 0.000000	 11.134047
46	 9	 9	 0	 421.512927	 -1	 0.000000	 2.908980
47	 9	 9	 0	 404.064563	 -1	 0.000000	 13.521782
48	 9	 9	 0	 450.088666	 -1	 0.000000	 5.109667
49	 9	 9	 1	 342.635870	 -1	 0.000000	 4.258770
50	 9	 9	 0	 404.563729	 -1	 0.000000	 4.394392
51	 9	 9	 0	 352.927516	 -1	 0.000000	 5.818943
52	 9	 9	 0	 451.360026	 -1	 0.000000	 4.437746
53	 9	 9	 0	 430.978562	 -1	 0.000000	 1.965883
54	 9	 9	 0	 399.709758	 -1	 0.000000	 6.503406
55	 9	 9	 0	 375.417062	 -1	 0.000000	 6.851852
56	 9	 9	 0	 362.559745	 -1	 0.000000	 3.650707
57	 9	 9	 0	 305.019105	 -1	 0.000000	 6.364152
58	 9	 9	 0	 402.345349	 -1	 0.000000	 3.627500
59	 9	 9	 1	 296.454004	 -1	 0.000000	 7.840779
60	 9	 9	 0	 432.295294	 -1	 0.000000	 5.102197
61	 9	 9	 0	 395.034958	 -1	 0.000000	 4.206281
62	 9	 9	 0	 422.349282	 -1	 0.000000	 4.266543
63	 9	 9	 0	 437.846483	 -1	 0.000000	 8.412360
64	 9	 9	 0	 404.566832	 -1	 0.000000	 5.249954
65	 9	 9	 0	 343.573382	 -1	 0.000000	 4.938280
66	 9	 9	 0	 434.968065	 -1	 0.000000	 3.282403
67	 9	 9	 0	 424.607785	 -1	 0.000000	 10.068681
68	 9	 9	 0	 401.052621	 -1	 0.000000	 4.232234
69	 9	 9	 0	 405.146038	 -1	 0.000000	 3.667500
70	 9	 9	 0	 419.617549	 -1	 0.000000	 4.946979
71	 9	 9	 0	 377.600974	 -1	 0.000000	 3.547012
72	 9	 9	 0	 403.352695	 -1	 0.000000	 4.216487
73	 9	 9	 0	 434.899266	 -1	 0.000000	 1.941254
74	 9	 9	 0	 359.819134	 -1	 0.000000	 4.112101
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 9	 9	 0	 405.010121	 -1	 0.000000	 8.856867
1	 9	 9	 0	 387.752935	 -1	 0.000000	 3.597209
2	 9	 9	 0	 425.947372	 -1	 0.000000	 4.546415
3	 9	 9	 0	 409.529993	 -1	 0.000000	 5.800723
4	 9	 9	 0	 412.445779	 -1	 0.000000	 3.138699
5	 9	 9	 0	 419.582283	 -1	 0.000000	 4.717766
6	 9	 9	 0	 377.738065	 -1	 0.000000	 6.174364
7	 9	 9	 0	 427.397235	 -1	 0.000000	 6.880899
8	 9	 9	 0	 376.381909	 -1	 0.000000	 3.620094
9	 9	 9	 0	 363.925422	 -1	 0.000000	 5.523947
10	 9	 9	 0	 395.145172	 -1	 0.000000	 2.963467
11	 9	 9	 0	 425.617313	 -1	 0.000000	 3.746141
12	 9	 9	 0	 406.024432	 -1	 0.000000	 9.435426
13	 9	 9	 0	 379.202933	 -1	 0.000000	 4.257999
14	 9	 9	 0	 435.289439	 -1	 0.000000	 5.754308
15	 9	 9	 0	 415.584760	 -1	 0.000000	 2.907992
16	 9	 9	 0	 394.924085	 -1	 0.000000	 1.420210
17	 9	 9	 0	 447.006016	 -1	 0.000000	 3.507474
18	 9	 9	 0	 454.090493	 -1	 0.000000	 5.045503
19	 9	 9	 0	 387.049818	 -1	 0.000000	 5.243883
20	 9	 9	 0	 439.844429	 -1	 0.000000	 3.810259
21	 9	 9	 0	 345.557554	 -1	 0.000000	 16.667183
22	 9	 9	 0	 428.932971	 -1	 0.000000	 5.094600
23	 9	 9	 0	 395.811873	 -1	 0.000000	 2.384768
24	 9	 9	 1	 338.203514	 -1	 0.000000	 4.007188
25	 9	 9	 0	 374.612447	 -1	 0.000000	 4.262018
26	 9	 9	 0	 388.928888	 -1	 0.000000	 3.121380
27	 9	 9	 0	 428.505590	 -1	 0.000000	 4.893349
28	 9	 9	 0	 420.368627	 -1	 0.000000	 6.289298
29	 9	 9	 0	 399.560082	 -1	 0.000000	 2.758399
30	 9	 9	 0	 426.937471	 -1	 0.000000	 3.983474
31	 9	 9	 0	 444.725549	 -1	 0.000000	 3.859931
32	 9	 9	 0	 420.066389	 -1	 0.000000	 4.509761
33	 9	 9	 0	 435.502549	 -1	 0.000000	 4.615441
34	 9	 9	 0	 430.047076	 -1	 0.000000	 3.609198
35	 9	 9	 0	 434.804128	 -1	 0.000000	 4.388682
36	 9	 9	 0	 426.572255	 -1	 0.000000	 3.572314
37	 9	 9	 0	 418.916274	 -1	 0.000000	 2.487579
38	 9	 9	 0	 425.970958	 -1	 0.000000	 2.952457
39	 9	 9	 0	 352.850269	 -1	 0.000000	 8.526423
40	 9	 9	 0	 412.851403	 -1	 0.000000	 3.487628
41	 9	 9	 0	 394.418407	 -1	 0.000000	 4.495533
42	 9	 9	 0	 441.825416	 -1	 0.000000	 2.498859
43	 9	 9	 0	 389.545390	 -1	 0.000000	 8.681049
44	 9	 9	 0	 428.490444	 -1	 0.000000	 6.917104
45	 9	 9	 0	 429.780057	 -1	 0.000000	 2.455542
46	 9	 9	 0	 445.176380	 -1	 0.000000	 4.596678
47	 9	 9	 0	 393.679323	 -1	 0.000000	 3.785082
48	 9	 9	 0	 346.644029	 -1	 0.000000	 5.510673
49	 9	 9	 0	 446.417040	 -1	 0.000000	 3.736201
50	 9	 9	 0	 389.484233	 -1	 0.000000	 7.940616
51	 9	 9	 0	 357.781728	 -1	 0.000000	 3.157167
52	 9	 9	 0	 399.029404	 -1	 0.000000	 3.661624
53	 9	 9	 0	 431.758628	 -1	 0.000000	 5.306996
54	 9	 9	 0	 404.253665	 -1	 0.000000	 18.211668
55	 9	 9	 0	 372.462712	 -1	 0.000000	 5.370718
56	 9	 9	 0	 393.366215	 -1	 0.000000	 4.643337
57	 9	 9	 0	 425.859948	 -1	 0.000000	 4.890734
58	 9	 9	 0	 320.007250	 -1	 0.000000	 5.323362
59	 9	 9	 0	 352.865154	 -1	 0.000000	 3.317280
60	 9	 9	 0	 419.691380	 -1	 0.000000	 6.635569
61	 9	 9	 0	 375.099226	 -1	 0.000000	 4.012413
62	 9	 9	 0	 375.570904	 -1	 0.000000	 6.983445
63	 9	 9	 0	 433.054328	 -1	 0.000000	 5.385830
64	 9	 9	 0	 412.888356	 -1	 0.000000	 4.675549
65	 9	 9	 0	 445.699203	 -1	 0.000000	 2.784630
66	 9	 9	 0	 427.373213	 -1	 0.000000	 3.643032
67	 9	 9	 0	 397.181142	 -1	 0.000000	 4.086678
68	 9	 9	 0	 421.714262	 -1	 0.000000	 4.339744
69	 9	 9	 0	 435.572212	 -1	 0.000000	 6.007851
70	 9	 9	 0	 419.027694	 -1	 0.000000	 5.526496
71	 9	 9	 0	 416.089241	 -1	 0.000000	 9.412871
72	 9	 9	 0	 376.601253	 -1	 0.000000	 5.130516
73	 9	 9	 0	 447.769006	 -1	 0.000000	 9.123413
74	 9	 9	 0	 388.184548	 -1	 0.000000	 5.807297
75	 9	 9	 0	 438.163613	 -1	 0.000000	 8.993909
76	 9	 9	 0	 363.213816	 -1	 0.000000	 4.266518
77	 9	 9	 0	 362.193861	 -1	 0.000000	 2.606456
78	 9	 9	 0	 400.495986	 -1	 0.000000	 11.817428
79	 9	 9	 0	 438.894161	 -1	 0.000000	 4.619275
80	 9	 9	 0	 433.609653	 -1	 0.000000	 2.045705
81	 9	 9	 0	 422.215741	 -1	 0.000000	 7.175966
82	 9	 9	 0	 448.796082	 -1	 0.000000	 5.728044
83	 9	 9	 0	 398.084555	 -1	 0.000000	 2.204774
84	 9	 9	 0	 412.870339	 -1	 0.000000	 3.886533
85	 9	 9	 0	 380.124978	 -1	 0.000000	 4.153907
86	 9	 9	 0	 366.715167	 -1	 0.000000	 9.343326
87	 9	 9	 0	 394.950457	 -1	 0.000000	 5.933999
88	 9	 9	 0	 399.786367	 -1	 0.000000	 5.223196
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
terminate called after throwing an instance of 'std::invalid_argument'
  what():  gr_ofdm_demod: Incorrect subcarriers allocated
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 11	 11	 0	 425.512953	 -1	 0.000000	 3.794784
1	 11	 11	 0	 466.153899	 -1	 0.000000	 4.618316
2	 11	 11	 0	 445.593616	 -1	 0.000000	 5.276966
3	 11	 11	 0	 423.068396	 -1	 0.000000	 12.683869
4	 11	 11	 0	 450.075444	 -1	 0.000000	 3.764794
5	 11	 11	 0	 429.686048	 -1	 0.000000	 4.544582
6	 11	 11	 0	 428.619763	 -1	 0.000000	 4.186045
7	 11	 11	 0	 453.313484	 -1	 0.000000	 6.125429
8	 11	 11	 0	 432.440935	 -1	 0.000000	 4.301719
9	 11	 11	 0	 446.390285	 -1	 0.000000	 5.388011
10	 11	 11	 0	 424.954053	 -1	 0.000000	 5.269100
11	 11	 11	 0	 438.661998	 -1	 0.000000	 7.390245
12	 11	 11	 0	 443.874327	 -1	 0.000000	 8.743802
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 10	 10	 0	 475.009751	 -1	 0.000000	 13.053569
1	 10	 10	 0	 472.190793	 -1	 0.000000	 8.822445
2	 10	 10	 0	 476.517092	 -1	 0.000000	 4.675508
3	 10	 10	 0	 474.657009	 -1	 0.000000	 2.983289
4	 10	 10	 0	 479.106017	 -1	 0.000000	 5.519087
5	 10	 10	 0	 472.602824	 -1	 0.000000	 5.593161
6	 10	 10	 0	 476.916555	 -1	 0.000000	 3.344410
7	 10	 10	 0	 478.453297	 -1	 0.000000	 9.552263
8	 10	 10	 0	 476.445020	 -1	 0.000000	 2.650787
9	 10	 10	 0	 475.631781	 -1	 0.000000	 3.560279
10	 10	 10	 0	 479.121268	 -1	 0.000000	 4.288944
11	 10	 10	 0	 468.381720	 -1	 0.000000	 12.776971
12	 10	 10	 0	 474.344990	 -1	 0.000000	 4.242250
13	 10	 10	 0	 473.027965	 -1	 0.000000	 5.871382
14	 10	 10	 0	 480.133474	 -1	 0.000000	 4.624011
15	 10	 10	 0	 474.867912	 -1	 0.000000	 13.393265
16	 10	 10	 0	 478.392966	 -1	 0.000000	 14.685552
17	 10	 10	 0	 480.537880	 -1	 0.000000	 8.392746
18	 10	 10	 0	 464.937690	 -1	 0.000000	 7.333538
19	 10	 10	 0	 471.194554	 -1	 0.000000	 3.918419
20	 10	 10	 0	 481.446702	 -1	 0.000000	 4.125512
21	 10	 10	 0	 467.407776	 -1	 0.000000	 3.790755
22	 10	 10	 0	 469.064160	 -1	 0.000000	 5.042706
23	 10	 10	 0	 477.290739	 -1	 0.000000	 2.967690
24	 10	 10	 0	 476.060588	 -1	 0.000000	 2.781237
25	 10	 10	 0	 471.794466	 -1	 0.000000	 7.223135
26	 10	 10	 0	 473.151295	 -1	 0.000000	 3.707361
27	 10	 10	 0	 473.075202	 -1	 0.000000	 1.984287
28	 10	 10	 0	 467.323049	 -1	 0.000000	 4.342214
29	 10	 10	 0	 479.264708	 -1	 0.000000	 7.138071
282	 10	 10	 0	 476.210754	 -1	 0.000000	 3.355155
283	 10	 10	 0	 476.695426	 -1	 0.000000	 8.086230
284	 10	 10	 0	 476.374623	 -1	 0.000000	 3.131196
285	 10	 10	 0	 477.464180	 -1	 0.000000	 5.674997
286	 10	 10	 0	 481.070077	 -1	 0.000000	 5.545083
287	 10	 10	 0	 480.288369	 -1	 0.000000	 3.397451
288	 10	 10	 0	 477.134639	 -1	 0.000000	 10.722604
289	 10	 10	 0	 472.393780	 -1	 0.000000	 5.779782
290	 10	 10	 0	 473.133086	 -1	 0.000000	 8.075073
291	 10	 10	 0	 477.401921	 -1	 0.000000	 5.408392
292	 10	 10	 0	 477.325064	 -1	 0.000000	 4.508364
293	 10	 10	 0	 478.263013	 -1	 0.000000	 6.712588
294	 10	 10	 0	 473.841108	 -1	 0.000000	 4.132051
295	 10	 10	 0	 480.049625	 -1	 0.000000	 7.392847
296	 10	 10	 0	 474.289054	 -1	 0.000000	 4.458197
297	 10	 10	 0	 478.670388	 -1	 0.000000	 5.645288
298	 10	 10	 0	 470.490644	 -1	 0.000000	 5.674024
299	 10	 10	 0	 478.918981	 -1	 0.000000	 4.342785
300	 10	 10	 0	 475.218704	 -1	 0.000000	 4.424308
301	 10	 10	 0	 476.086782	 -1	 0.000000	 3.101119
302	 10	 10	 0	 479.803547	 -1	 0.000000	 5.404923
303	 10	 10	 0	 479.481539	 -1	 0.000000	 4.529659
304	 10	 10	 0	 472.226466	 -1	 0.000000	 7.084335
305	 10	 10	 0	 470.020979	 -1	 0.000000	 4.229636
306	 10	 10	 0	 473.594875	 -1	 0.000000	 7.630757
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E
gr_buffer::allocate_buffer: warning: tried to allocate
   36 items of size 1776. Due to alignment requirements
   256 were allocated.  If this isn't OK, consider padding
   your structure to a power-of-two bytes.
   On this platform, our allocation granularity is 4096 bytes.
0	 10	 10	 0	 476.431039	 -1	 0.000000	 4.544301
1	 10	 10	 0	 470.703169	 -1	 0.000000	 3.671518
>>> gr_fir_ccf: using E
>>> gr_fir_fff: using E

